package units.qual:
  annotation @mPERs2:

package units.qual:
  annotation @gPERmol:

package units.qual:
  annotation @J:

package units.qual:
  annotation @kg:

package units.qual:
  annotation @ms:

package units.qual:
  annotation @kgPERmol:

package units.qual:
  annotation @s:

package units.qual:
  annotation @PERm2s2:

package units.qual:
  annotation @m2s2:

package units.qual:
  annotation @g:

package units.qual:
  annotation @WPERm2K:

package units.qual:
  annotation @kg2PERs2:

package units.qual:
  annotation @W:

package units.qual:
  annotation @deg:

package units.qual:
  annotation @Pas:

package units.qual:
  annotation @m:

package units.qual:
  annotation @kgPERm2s:

package units.qual:
  annotation @rad:

package units.qual:
  annotation @UnknownUnits:

package units.qual:
  annotation @MJPERm3:

package units.qual:
  annotation @kgPERm3:

package units.qual:
  annotation @m2PERs2K:

package units.qual:
  annotation @mm:

package units.qual:
  annotation @us:

package units.qual:
  annotation @hr:

package units.qual:
  annotation @mm2:

package units.qual:
  annotation @bar:

package units.qual:
  annotation @Dimensionless:

package units.qual:
  annotation @s2PERm2:

package units.qual:
  annotation @K:

package units.qual:
  annotation @bars3PERm:

package units.qual:
  annotation @UnitsBottom:

package units.qual:
  annotation @m3PERhr:

package units.qual:
  annotation @BUC:
    String unit
    int exponent

package units.qual:
  annotation @UnitsRep:
    boolean top
    boolean bot
    int prefixExponent
    annotation-field units.qual.BUC[] baseUnitComponents

package units.qual:
  annotation @Pa:

package units.qual:
  annotation @MJ:

package units.qual:
  annotation @ns:

package units.qual:
  annotation @m2:

package units.qual:
  annotation @km:

package units.qual:
  annotation @m2PERs2:

package units.qual:
  annotation @C:

package units.qual:
  annotation @mol:

package units.qual:
  annotation @g8:

package units.qual:
  annotation @kgPERs:

package units.qual:
  annotation @PolyUnit:

package units.qual:
  annotation @m3:

package units.qual:
  annotation @mPERs:

package units.qual:
  annotation @RDU:

package units.qual:
  annotation @JPERKmol:

package net.smert.jreactphysics3d.collision.shapes:
class BoxShape:@units.qual.Dimensionless
field extent:
insert-annotation Variable.type: @units.qual.Dimensionless

method getLocalSupportPointWithMargin(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.body, Block.statement 0, Return.expression, MethodInvocation.argument 1, ConditionalExpression.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, MethodInvocation.argument 0, ConditionalExpression.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, MethodInvocation.argument 2, ConditionalExpression.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method clone()Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;:
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/collision/shapes/BoxShape;)V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/mathematics/Vector3;F)V:
insert-annotation Method.body, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless

method computeLocalInertiaTensor(Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;F)V:
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, MethodInvocation.argument 6: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, Binary.leftOperand, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, Binary.leftOperand, Parenthesized.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, MethodInvocation.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, MethodInvocation.argument 5: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, MethodInvocation.argument 7: @units.qual.Dimensionless

method getLocalBounds(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method isEqualTo(Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;)Z:
insert-annotation Method.body, Block.statement 0, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getLocalSupportPointWithoutMargin(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.body, Block.statement 0, Return.expression, MethodInvocation.argument 0, ConditionalExpression.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, MethodInvocation.argument 2, ConditionalExpression.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, MethodInvocation.argument 1, ConditionalExpression.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method getExtent()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.constraint:
class ContactPoint:
field worldPointOnBody2:
insert-annotation Variable.type: @units.qual.Dimensionless

field worldPointOnBody1:
insert-annotation Variable.type: @units.qual.Dimensionless

field frictionImpulse1:
insert-annotation Variable.type: @units.qual.Dimensionless

field frictionImpulse2:
insert-annotation Variable.type: @units.qual.Dimensionless

field localPointOnBody2:
insert-annotation Variable.type: @units.qual.Dimensionless

field localPointOnBody1:
insert-annotation Variable.type: @units.qual.Dimensionless

field body2:
insert-annotation Variable.type: @units.qual.Dimensionless

field body1:
insert-annotation Variable.type: @units.qual.Dimensionless

field penetrationImpulse:
insert-annotation Variable.type: @units.qual.Dimensionless

field isRestingContact:
insert-annotation Variable.type: @units.qual.Dimensionless

field frictionVectors:
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.dimension 0: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 0: @units.qual.Dimensionless

field normal:
insert-annotation Variable.type: @units.qual.Dimensionless

field penetrationDepth:
insert-annotation Variable.type: @units.qual.Dimensionless

method getLocalPointOnBody1()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setPenetrationDepth(F)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getLocalPointOnBody2()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getIsRestingContact()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/constraint/ContactPointInfo;)V:
insert-annotation Method.body, Block.statement 10, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getNormal()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setWorldPointOnBody1(Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setFrictionImpulse1(F)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getBody1()Lnet/smert/jreactphysics3d/body/RigidBody;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setIsRestingContact(Z)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method setFrictionImpulse2(F)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setFrictionVector1(Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method setFrictionVector2(Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless

method getBody2()Lnet/smert/jreactphysics3d/body/RigidBody;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setWorldPointOnBody2(Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getFrictionImpulse1()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getPenetrationDepth()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getFrictionVector2()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, ArrayAccess.index: @units.qual.Dimensionless

method getWorldPointOnBody2()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getWorldPointOnBody1()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setPenetrationImpulse(F)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getPenetrationImpulse()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getFrictionImpulse2()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getFrictionVector1()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.body, Block.statement 0, Return.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.narrowphase.EPA:
class TrianglesStore:
field triangles:
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field MAX_TRIANGLES:
insert-annotation Variable.initializer: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field numTriangles:
insert-annotation Variable.type: @units.qual.Dimensionless

method get(I)Lnet/smert/jreactphysics3d/collision/narrowphase/EPA/TriangleEPA;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless

method newTriangle([Lnet/smert/jreactphysics3d/mathematics/Vector3;III)Lnet/smert/jreactphysics3d/collision/narrowphase/EPA/TriangleEPA;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless

method <init>()V:
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewArray.type 0: @units.qual.Dimensionless

method getNumTriangles()I:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setNumTriangles(I)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method clear()V:
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method last()Lnet/smert/jreactphysics3d/collision/narrowphase/EPA/TriangleEPA;:
insert-annotation Method.body, Block.statement 1, Return.expression, ArrayAccess.index, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.engine:
class EventListener:@units.qual.Dimensionless
method <init>()V:

method newContact(Lnet/smert/jreactphysics3d/constraint/ContactPointInfo;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method beginContact(Lnet/smert/jreactphysics3d/constraint/ContactPointInfo;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.mathematics:
class Mathematics:
method ArcCos(F)F:
insert-annotation Method.body, Block.statement 0, Return.expression, TypeCast.type: @units.qual.Dimensionless

method Sqrt(F)F:
insert-annotation Method.body, Block.statement 0, Return.expression, TypeCast.type: @units.qual.Dimensionless

method ArcTan2(FF)F:
insert-annotation Method.body, Block.statement 0, Return.expression, TypeCast.type: @units.qual.Dimensionless

method Tan(F)F:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, TypeCast.type: @units.qual.Dimensionless

method Cos(F)F:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, TypeCast.type: @units.qual.Dimensionless

method <init>()V:

method ArcSin(F)F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, TypeCast.type: @units.qual.Dimensionless

method Sin(F)F:
insert-annotation Method.body, Block.statement 0, Return.expression, TypeCast.type: @units.qual.Dimensionless

method ApproxEqual(FFF)Z:
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.broadphase:
class BroadPhaseAlgorithm:
field collisionDetection:
insert-annotation Variable.type: @units.qual.Dimensionless

method addObject(Lnet/smert/jreactphysics3d/body/CollisionBody;Lnet/smert/jreactphysics3d/collision/shapes/AABB;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method removeObject(Lnet/smert/jreactphysics3d/body/CollisionBody;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/collision/CollisionDetection;)V:
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless

method updateObject(Lnet/smert/jreactphysics3d/body/CollisionBody;Lnet/smert/jreactphysics3d/collision/shapes/AABB;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.shapes:
class AABB:
field mMinCoordinates:
insert-annotation Variable.type: @units.qual.Dimensionless

field mMaxCoordinates:
insert-annotation Variable.type: @units.qual.Dimensionless

method setMax(Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getMin()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setMin(Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getMax()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getCenter()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>()V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method testCollision(Lnet/smert/jreactphysics3d/collision/shapes/AABB;)Z:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.engine:
class Island:@units.qual.Dimensionless
field numJoints:
insert-annotation Variable.type: @units.qual.Dimensionless

field numBodies:
insert-annotation Variable.type: @units.qual.Dimensionless

field numContactManifolds:
insert-annotation Variable.type: @units.qual.Dimensionless

field joints:
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field contactManifolds:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless

field bodies:
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

method addJoint(Lnet/smert/jreactphysics3d/constraint/Joint;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method addContactManifold(Lnet/smert/jreactphysics3d/engine/ContactManifold;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getBodies()[Lnet/smert/jreactphysics3d/body/RigidBody;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.type, ArrayType.type: @units.qual.Dimensionless

method getJoints()[Lnet/smert/jreactphysics3d/constraint/Joint;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getNumJoints()I:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getNumContactManifolds()I:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method <init>(III)V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.expression, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.expression, NewArray.type 0: @units.qual.Dimensionless

method getContactManifolds()[Lnet/smert/jreactphysics3d/engine/ContactManifold;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type, ArrayType.type: @units.qual.Dimensionless

method addBody(Lnet/smert/jreactphysics3d/body/RigidBody;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getNumBodies()I:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.narrowphase.EPA:
class Utils:@units.qual.Dimensionless
method halfLink(Lnet/smert/jreactphysics3d/collision/narrowphase/EPA/EdgeEPA;Lnet/smert/jreactphysics3d/collision/narrowphase/EPA/EdgeEPA;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method <init>()V:

method link(Lnet/smert/jreactphysics3d/collision/narrowphase/EPA/EdgeEPA;Lnet/smert/jreactphysics3d/collision/narrowphase/EPA/EdgeEPA;)Z:
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.broadphase:
class SweepAndPruneAlgorithm:@units.qual.Dimensionless
field endPoints:
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 2: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type, ArrayType.type: @units.qual.Dimensionless

field numBoxes:
insert-annotation Variable.type: @units.qual.Dimensionless

field numMaxBoxes:
insert-annotation Variable.type: @units.qual.Dimensionless

field INVALID_INDEX:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer: @units.qual.Dimensionless

field freeBoxIndices:
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless

field boxes:
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field mapBodyToBoxIndex:
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.typeArgument 1: @units.qual.Dimensionless

field NUM_SENTINELS:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer: @units.qual.Dimensionless

method addObject(Lnet/smert/jreactphysics3d/body/CollisionBody;Lnet/smert/jreactphysics3d/collision/shapes/AABB;)V:
insert-annotation Method.body, Block.statement 8, Variable.initializer, Binary.leftOperand, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, ForLoop.statement, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.leftOperand, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, ForLoop.statement, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.rightOperand, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ForLoop.statement, Block.statement 4, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.initializer, Binary.leftOperand, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, Variable.initializer, Binary.leftOperand, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ForLoop.statement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, ForLoop.statement, Block.statement 4, Variable.initializer, ArrayAccess.index, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Assert.condition, Parenthesized.expression, Binary.rightOperand, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Assert.condition, Parenthesized.expression, Binary.rightOperand, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Assert.condition, Parenthesized.expression, Binary.rightOperand, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ForLoop.statement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.rightOperand, MethodInvocation.argument 0, Unary.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Assert.condition, Parenthesized.expression, Binary.rightOperand, MethodInvocation.argument 0, Unary.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Assert.condition, Parenthesized.expression, Binary.rightOperand, MethodInvocation.argument 0, Unary.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ForLoop.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, ForLoop.statement, Block.statement 3, If.condition, Parenthesized.expression, Binary.leftOperand, ArrayAccess.index, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 0, Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ForLoop.statement, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, ForLoop.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, ForLoop.statement, Block.statement 4, Variable.type: @units.qual.Dimensionless

method removeObject(Lnet/smert/jreactphysics3d/body/CollisionBody;)V:
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ForLoop.statement, Block.statement 5, Assert.condition, Parenthesized.expression, Unary.expression, MemberSelect.expression, ArrayAccess.index, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, Binary.leftOperand, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.initializer, MethodInvocation.argument 0, Binary.leftOperand, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, Binary.leftOperand, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, Binary.leftOperand, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.initializer, MethodInvocation.argument 0, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ForLoop.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ForLoop.statement, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.rightOperand, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, If.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ForLoop.statement, Block.statement 4, Assert.condition, Parenthesized.expression, Binary.leftOperand, MemberSelect.expression, ArrayAccess.index, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ForLoop.statement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ForLoop.statement, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.leftOperand, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ForLoop.statement, Block.statement 3, Variable.initializer, ArrayAccess.index, Binary.rightOperand: @units.qual.Dimensionless

method shrinkArrays()V:
insert-annotation Method.body, Block.statement 12, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, EnhancedForLoop.statement, Block.statement 2, If.thenStatement, Block.statement 8, ForLoop.statement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, EnhancedForLoop.statement, Block.statement 2, If.thenStatement, Block.statement 8, ForLoop.statement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, EnhancedForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, ConditionalExpression.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, ExpressionStatement.expression, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, ExpressionStatement.expression, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 22, ExpressionStatement.expression, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, EnhancedForLoop.variable, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, EnhancedForLoop.statement, Block.statement 2, If.thenStatement, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, EnhancedForLoop.statement, Block.statement 2, If.thenStatement, Block.statement 8, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, EnhancedForLoop.statement, Block.statement 2, If.thenStatement, Block.statement 8, ForLoop.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, EnhancedForLoop.statement, Block.statement 2, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, Binary.leftOperand, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 25, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 26, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type, ParameterizedType.typeArgument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, EnhancedForLoop.statement, Block.statement 1, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, EnhancedForLoop.statement, Block.statement 2, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, ExpressionStatement.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, ExpressionStatement.expression, MethodInvocation.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, ConditionalExpression.trueExpression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.initializer, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, EnhancedForLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, ExpressionStatement.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, ExpressionStatement.expression, MethodInvocation.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, ExpressionStatement.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, ExpressionStatement.expression, MethodInvocation.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 22, ExpressionStatement.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 22, ExpressionStatement.expression, MethodInvocation.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, EnhancedForLoop.statement, Block.statement 2, If.thenStatement, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, EnhancedForLoop.statement, Block.statement 2, If.thenStatement, Block.statement 8, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, EnhancedForLoop.statement, Block.statement 2, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, EnhancedForLoop.statement, Block.statement 0, Variable.initializer, TypeCast.type: @units.qual.Dimensionless

method testIntersect1DSortedAABBs(Lnet/smert/jreactphysics3d/collision/broadphase/BoxAABB;Lnet/smert/jreactphysics3d/collision/broadphase/AABBInt;[Lnet/smert/jreactphysics3d/collision/broadphase/EndPoint;I)Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method testIntersect2D(Lnet/smert/jreactphysics3d/collision/broadphase/BoxAABB;Lnet/smert/jreactphysics3d/collision/broadphase/BoxAABB;II)Z:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/collision/CollisionDetection;)V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method updateObject(Lnet/smert/jreactphysics3d/body/CollisionBody;Lnet/smert/jreactphysics3d/collision/shapes/AABB;)V:
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method resizeArrays()V:
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, ConditionalExpression.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 7, ExpressionStatement.expression, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 9, ExpressionStatement.expression, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 11, ExpressionStatement.expression, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 12, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 6, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 8, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 10, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 2, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 4, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 6, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 8, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 10, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, ConditionalExpression.trueExpression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 13, ExpressionStatement.expression, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, Unary.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.elseStatement, Block.statement 12, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless

method updateObjectIntegerAABB(Lnet/smert/jreactphysics3d/body/CollisionBody;Lnet/smert/jreactphysics3d/collision/broadphase/AABBInt;)V:
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 12, If.thenStatement, Block.statement 4, WhileLoop.statement, Block.statement 3, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 12, If.thenStatement, Block.statement 4, WhileLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 12, If.elseStatement, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 12, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 12, If.thenStatement, Block.statement 4, WhileLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Assert.condition, Parenthesized.expression, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 2, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 8, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 0, Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Assert.condition, Parenthesized.expression, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Assert.condition, Parenthesized.expression, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Assert.condition, Parenthesized.expression, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 7, If.elseStatement, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 4, WhileLoop.statement, Block.statement 3, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 1, Variable.initializer, Binary.leftOperand, Parenthesized.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 7, If.elseStatement, If.thenStatement, Block.statement 4, WhileLoop.statement, Block.statement 3, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 7, If.elseStatement, If.thenStatement, Block.statement 4, WhileLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand, MethodInvocation.argument 0, Unary.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.rightOperand, MethodInvocation.argument 0, Unary.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Assert.condition, Parenthesized.expression, Binary.rightOperand, MethodInvocation.argument 0, Unary.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 12, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 12, If.elseStatement, If.thenStatement, Block.statement 4, WhileLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 7, If.elseStatement, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Assert.condition, Parenthesized.expression, Binary.rightOperand, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Assert.condition, Parenthesized.expression, Binary.rightOperand, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 12, If.elseStatement, If.thenStatement, Block.statement 4, WhileLoop.statement, Block.statement 3, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 4, WhileLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Assert.condition, Parenthesized.expression, Binary.rightOperand, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 4, WhileLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 7, If.elseStatement, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 9, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 1, Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 12, If.elseStatement, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 0, Variable.initializer, Binary.leftOperand, Parenthesized.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 12, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 12, If.elseStatement, If.thenStatement, Block.statement 4, WhileLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 12, If.elseStatement, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 7, If.elseStatement, If.thenStatement, Block.statement 4, WhileLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.broadphase:
class PairManager:
field collisionDetection:
insert-annotation Variable.type: @units.qual.Dimensionless

field hashTable:
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field numOverlappingPairs:
insert-annotation Variable.type: @units.qual.Dimensionless

field INVALID_INDEX:
insert-annotation Variable.initializer: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field overlappingPairs:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless

field hashMask:
insert-annotation Variable.type: @units.qual.Dimensionless

field offsetNextPair:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless

field numElementsHashTable:
insert-annotation Variable.type: @units.qual.Dimensionless

method getNumOverlappingPairs()I:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method findPair(II)Lnet/smert/jreactphysics3d/collision/broadphase/BodyPair;:
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/collision/CollisionDetection;)V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless

method findPairWithHashValue(III)Lnet/smert/jreactphysics3d/collision/broadphase/BodyPair;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method computeHash32Bits(I)I:
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, CompoundAssignment.expression, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, CompoundAssignment.expression, Unary.expression, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, CompoundAssignment.expression, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, CompoundAssignment.expression, Unary.expression, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, CompoundAssignment.expression, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, CompoundAssignment.expression, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless

method lookForAPair(III)Lnet/smert/jreactphysics3d/collision/broadphase/BodyPair;:
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method reallocatePairs()V:
insert-annotation Method.body, Block.statement 8, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless

method removePairWithHashValue(IIII)V:
insert-annotation Method.body, Block.statement 6, If.elseStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.elseStatement, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.elseStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method removePair(II)Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless

method isDifferentPair(Lnet/smert/jreactphysics3d/collision/broadphase/BodyPair;II)Z:
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method ComputeNextPowerOfTwo(I)I:
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, CompoundAssignment.expression, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Return.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, CompoundAssignment.expression, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, CompoundAssignment.expression, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, CompoundAssignment.expression, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, CompoundAssignment.expression, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless

method shrinkMemory()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless

method computeHashBodies(II)I:
insert-annotation Method.body, Block.statement 0, Return.expression, MethodInvocation.argument 0, Binary.rightOperand, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method computePairOffset(Lnet/smert/jreactphysics3d/collision/broadphase/BodyPair;)I:
insert-annotation Method.body, Block.statement 1, Return.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method addPair(Lnet/smert/jreactphysics3d/body/CollisionBody;Lnet/smert/jreactphysics3d/body/CollisionBody;)Lnet/smert/jreactphysics3d/collision/broadphase/BodyPair;:
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.engine:
class OverlappingPair:
field cachedSeparatingAxis:
insert-annotation Variable.type: @units.qual.Dimensionless

field contactManifold:
insert-annotation Variable.type: @units.qual.Dimensionless

field body2:
insert-annotation Variable.type: @units.qual.Dimensionless

field body1:
insert-annotation Variable.type: @units.qual.Dimensionless

method getBody1()Lnet/smert/jreactphysics3d/body/CollisionBody;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method update()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getCachedSeparatingAxis()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setCachedSeparatingAxis(Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getNumContactPoints()I:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getBody2()Lnet/smert/jreactphysics3d/body/CollisionBody;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method addContact(Lnet/smert/jreactphysics3d/constraint/ContactPoint;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getContactManifold()Lnet/smert/jreactphysics3d/engine/ContactManifold;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/body/CollisionBody;Lnet/smert/jreactphysics3d/body/CollisionBody;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression, NewClass.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression, NewClass.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression, NewClass.argument 1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.broadphase:
class EndPoint:@units.qual.Dimensionless
field isMin:
insert-annotation Variable.type: @units.qual.Dimensionless

field boxID:
insert-annotation Variable.type: @units.qual.Dimensionless

field value:
insert-annotation Variable.type: @units.qual.Dimensionless

method <init>()V:

method setValues(IZJ)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.constraint:
class BallAndSocketJoint:
field mInverseMassMatrix:
insert-annotation Variable.type: @units.qual.Dimensionless

field mI2:
insert-annotation Variable.type: @units.qual.Dimensionless

field mImpulse:
insert-annotation Variable.type: @units.qual.Dimensionless

field mR2World:
insert-annotation Variable.type: @units.qual.Dimensionless

field mI1:
insert-annotation Variable.type: @units.qual.Dimensionless

field mR1World:
insert-annotation Variable.type: @units.qual.Dimensionless

field BETA:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer: @units.qual.Dimensionless

field mLocalAnchorPointBody2:
insert-annotation Variable.type: @units.qual.Dimensionless

field mLocalAnchorPointBody1:
insert-annotation Variable.type: @units.qual.Dimensionless

field mBiasVector:
insert-annotation Variable.type: @units.qual.Dimensionless

method solvePositionConstraint(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.initializer, NewClass.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 22, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.initializer, NewClass.argument 7: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 22, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 3, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.initializer, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.initializer, NewClass.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.initializer, NewClass.argument 5: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 3, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.initializer, NewClass.argument 6: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 22, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless

method initBeforeSolve(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.body, Block.statement 21, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.initializer, NewClass.argument 6: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.initializer, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.initializer, NewClass.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.initializer, NewClass.argument 5: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.initializer, NewClass.argument 7: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.initializer, NewClass.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless

method warmstart(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless

method solveVelocityConstraint(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/constraint/BallAndSocketJointInfo;)V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision:
class BroadPhasePair:
field previousSeparatingAxis:
insert-annotation Variable.type: @units.qual.Dimensionless

field body2:
insert-annotation Variable.type: @units.qual.Dimensionless

field body1:
insert-annotation Variable.type: @units.qual.Dimensionless

method getBody2()Lnet/smert/jreactphysics3d/body/CollisionBody;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getBody1()Lnet/smert/jreactphysics3d/body/CollisionBody;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/body/CollisionBody;Lnet/smert/jreactphysics3d/body/CollisionBody;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, NewClass.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, NewClass.argument 2: @units.qual.Dimensionless

method getPreviousSeparatingAxis()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method newBodiesIndexPair()Lnet/smert/jreactphysics3d/collision/BodyIndexPair;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method ComputeBodiesIndexPair(Lnet/smert/jreactphysics3d/body/CollisionBody;Lnet/smert/jreactphysics3d/body/CollisionBody;)Lnet/smert/jreactphysics3d/collision/BodyIndexPair;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, ConditionalExpression.trueExpression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, ConditionalExpression.falseExpression, NewClass.identifier: @units.qual.Dimensionless

package net.smert.jreactphysics3d.constraint:
class JointListElement:
method <init>(Lnet/smert/jreactphysics3d/constraint/Joint;Lnet/smert/jreactphysics3d/constraint/JointListElement;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.narrowphase.EPA:
class TriangleComparison:
method compare(Lnet/smert/jreactphysics3d/collision/narrowphase/EPA/TriangleEPA;Lnet/smert/jreactphysics3d/collision/narrowphase/EPA/TriangleEPA;)I:
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, Return.expression: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Return.expression, ConditionalExpression.trueExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Return.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.body:
class Body:
field isActive:
insert-annotation Variable.type: @units.qual.Dimensionless

field isAlreadyInIsland:
insert-annotation Variable.type: @units.qual.Dimensionless

field sleepTime:
insert-annotation Variable.type: @units.qual.Dimensionless

field bodyID:
insert-annotation Variable.type: @units.qual.Dimensionless

field isAllowedToSleep:
insert-annotation Variable.type: @units.qual.Dimensionless

method isAlreadyInIsland()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setIsSleeping(Z)V:
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, Block.statement 0, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless

method isSleeping()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setIsAllowedToSleep(Z)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method setIsAlreadyInIsland(Z)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method setSleepTime(F)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method isAllowedToSleep()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getSleepTime()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method isActive()Z:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getBodyID()I:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method <init>(I)V:
insert-annotation Method.body, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless

package net.smert.jreactphysics3d.engine:
class ContactPointSolver:
field inverseFriction2Mass:
insert-annotation Variable.type: @units.qual.Dimensionless

field penetrationSplitImpulse:
insert-annotation Variable.type: @units.qual.Dimensionless

field friction1Impulse:
insert-annotation Variable.type: @units.qual.Dimensionless

field oldFrictionVector2:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field r2CrossT1:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field friction2Impulse:
insert-annotation Variable.type: @units.qual.Dimensionless

field oldFrictionVector1:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field r2CrossT2:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field r1:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field penetrationImpulse:
insert-annotation Variable.type: @units.qual.Dimensionless

field r2:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field frictionVector1:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field frictionVector2:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field r1CrossT2:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field isRestingContact:
insert-annotation Variable.type: @units.qual.Dimensionless

field inverseFriction1Mass:
insert-annotation Variable.type: @units.qual.Dimensionless

field r1CrossT1:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field restitutionBias:
insert-annotation Variable.type: @units.qual.Dimensionless

field externalContact:
insert-annotation Variable.type: @units.qual.Dimensionless

field normal:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field inversePenetrationMass:
insert-annotation Variable.type: @units.qual.Dimensionless

field r1CrossN:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field penetrationDepth:
insert-annotation Variable.type: @units.qual.Dimensionless

field r2CrossN:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

method <init>()V:

package net.smert.jreactphysics3d.collision.narrowphase.GJK:
class GJKAlgorithm:
field body2ToBody1:
insert-annotation Variable.type: @units.qual.Dimensionless

field relativeDirection:
insert-annotation Variable.type: @units.qual.Dimensionless

field minkDiff:
insert-annotation Variable.type: @units.qual.Dimensionless

field distanceSquare:
insert-annotation Variable.type: @units.qual.Dimensionless

field margin:
insert-annotation Variable.type: @units.qual.Dimensionless

field direction:
insert-annotation Variable.type: @units.qual.Dimensionless

field supportB:
insert-annotation Variable.type: @units.qual.Dimensionless

field supportA:
insert-annotation Variable.type: @units.qual.Dimensionless

field rotateToBody2:
insert-annotation Variable.type: @units.qual.Dimensionless

field epaAlgorithm:
insert-annotation Variable.type: @units.qual.Dimensionless

field pointA:
insert-annotation Variable.type: @units.qual.Dimensionless

field REL_ERROR:
insert-annotation Variable.initializer: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field REL_ERROR_SQUARE:
insert-annotation Variable.type: @units.qual.Dimensionless

field pointB:
insert-annotation Variable.type: @units.qual.Dimensionless

method addContactInfo(Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;Lnet/smert/jreactphysics3d/mathematics/Transform;Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;Lnet/smert/jreactphysics3d/mathematics/Transform;Lnet/smert/jreactphysics3d/constraint/ContactPointInfo;Lnet/smert/jreactphysics3d/collision/narrowphase/GJK/Simplex;)Z:
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless

method testCollision(Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;Lnet/smert/jreactphysics3d/mathematics/Transform;Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;Lnet/smert/jreactphysics3d/mathematics/Transform;Lnet/smert/jreactphysics3d/constraint/ContactPointInfo;)Z:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.initializer, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, DoWhileLoop.statement, Block.statement 7, If.condition, Parenthesized.expression, Binary.leftOperand, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, DoWhileLoop.statement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, DoWhileLoop.statement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, DoWhileLoop.statement, Block.statement 4, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method computePenetrationDepthForEnlargedObjects(Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;Lnet/smert/jreactphysics3d/mathematics/Transform;Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;Lnet/smert/jreactphysics3d/mathematics/Transform;Lnet/smert/jreactphysics3d/constraint/ContactPointInfo;)Z:
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, DoWhileLoop.statement, Block.statement 7, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, DoWhileLoop.statement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, DoWhileLoop.statement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, DoWhileLoop.statement, Block.statement 4, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method <init>()V:
insert-annotation Method.body, Block.statement 8, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless

package net.smert.jreactphysics3d.constraint:
class HingeJoint:@units.qual.Dimensionless
field mA1:
insert-annotation Variable.type: @units.qual.Dimensionless

field mInitOrientationDifferenceInv:
insert-annotation Variable.type: @units.qual.Dimensionless

field mImpulseMotor:
insert-annotation Variable.type: @units.qual.Dimensionless

field mBTranslation:
insert-annotation Variable.type: @units.qual.Dimensionless

field mMotorSpeed:
insert-annotation Variable.type: @units.qual.Dimensionless

field mImpulseRotation:
insert-annotation Variable.type: @units.qual.Dimensionless

field mBRotation:
insert-annotation Variable.type: @units.qual.Dimensionless

field mImpulseTranslation:
insert-annotation Variable.type: @units.qual.Dimensionless

field mImpulseUpperLimit:
insert-annotation Variable.type: @units.qual.Dimensionless

field mHingeLocalAxisBody1:
insert-annotation Variable.type: @units.qual.Dimensionless

field mIsUpperLimitViolated:
insert-annotation Variable.type: @units.qual.Dimensionless

field mI1:
insert-annotation Variable.type: @units.qual.Dimensionless

field mLowerLimit:
insert-annotation Variable.type: @units.qual.Dimensionless

field mLocalAnchorPointBody2:
insert-annotation Variable.type: @units.qual.Dimensionless

field mInverseMassMatrixTranslation:
insert-annotation Variable.type: @units.qual.Dimensionless

field mI2:
insert-annotation Variable.type: @units.qual.Dimensionless

field mIsLowerLimitViolated:
insert-annotation Variable.type: @units.qual.Dimensionless

field mR2World:
insert-annotation Variable.type: @units.qual.Dimensionless

field mInverseMassMatrixLimitMotor:
insert-annotation Variable.type: @units.qual.Dimensionless

field mInverseMassMatrixRotation:
insert-annotation Variable.type: @units.qual.Dimensionless

field mR1World:
insert-annotation Variable.type: @units.qual.Dimensionless

field mInverseMassMatrixMotor:
insert-annotation Variable.type: @units.qual.Dimensionless

field mImpulseLowerLimit:
insert-annotation Variable.type: @units.qual.Dimensionless

field mUpperLimit:
insert-annotation Variable.type: @units.qual.Dimensionless

field mBUpperLimit:
insert-annotation Variable.type: @units.qual.Dimensionless

field BETA:
insert-annotation Variable.initializer: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field mIsLimitEnabled:
insert-annotation Variable.type: @units.qual.Dimensionless

field mC2CrossA1:
insert-annotation Variable.type: @units.qual.Dimensionless

field mHingeLocalAxisBody2:
insert-annotation Variable.type: @units.qual.Dimensionless

field mMaxMotorTorque:
insert-annotation Variable.type: @units.qual.Dimensionless

field mB2CrossA1:
insert-annotation Variable.type: @units.qual.Dimensionless

field mIsMotorEnabled:
insert-annotation Variable.type: @units.qual.Dimensionless

field mLocalAnchorPointBody1:
insert-annotation Variable.type: @units.qual.Dimensionless

field mBLowerLimit:
insert-annotation Variable.type: @units.qual.Dimensionless

method solvePositionConstraint(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 0, ExpressionStatement.expression, CompoundAssignment.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 38, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 30, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 51, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 54, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, ExpressionStatement.expression, CompoundAssignment.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 38, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 55, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 55, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 34, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 25, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 26, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 43, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 56, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 44, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 35, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 55, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 56, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 55, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 56, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 27, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 30, Variable.initializer, NewClass.argument 7: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 30, Variable.initializer, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 30, Variable.initializer, NewClass.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 30, Variable.initializer, NewClass.argument 5: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 38, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 38, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 38, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 48, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 49, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 31, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 36, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 40, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 41, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 42, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 56, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 30, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 3, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 38, If.thenStatement, Block.statement 3, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 32, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 55, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 31, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 52, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 53, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 56, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 56, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 56, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 39, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 35, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 22, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 35, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 40, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 41, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 42, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 25, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 26, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 27, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 43, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 36, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 39, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 55, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 49, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 56, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 55, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 45, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 47, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 32, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 38, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 44, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 38, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 55, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 56, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 30, Variable.initializer, NewClass.argument 6: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 31, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 30, Variable.initializer, NewClass.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 38, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 38, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 22, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 35, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 32, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 52, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 53, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 55, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 55, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 36, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless

method resetLimits()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless

method computeCurrentHingeAngle(Lnet/smert/jreactphysics3d/mathematics/Quaternion;Lnet/smert/jreactphysics3d/mathematics/Quaternion;)F:
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.elseStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless

method warmstart(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 4, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 6, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 6, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless

method solveVelocityConstraint(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 7, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, Variable.initializer, Unary.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 5, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 7, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 5, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 7, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 5, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless

method enableMotor(Z)V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method setMaxMotorTorque(F)V:
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getMinAngleLimit()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setMinAngleLimit(F)V:
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand, Binary.leftOperand, Unary.expression: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless

method computeCorrespondingAngleNearLimits(FFF)F:
insert-annotation Method.body, Block.statement 0, If.elseStatement, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, If.elseStatement, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, If.elseStatement, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method initBeforeSolve(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.body, Block.statement 45, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 25, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 39, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 44, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 33, Variable.initializer, NewClass.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 30, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 44, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 47, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 40, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 26, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 27, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 33, Variable.initializer, NewClass.argument 6: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 4, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 56, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 56, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 28, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 29, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 30, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 40, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 34, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 35, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 25, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, ExpressionStatement.expression, CompoundAssignment.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 45, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 41, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 42, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 43, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 34, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 35, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 48, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 49, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 50, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 51, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 41, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 42, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 43, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 33, Variable.initializer, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 33, Variable.initializer, NewClass.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 33, Variable.initializer, NewClass.argument 5: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 4, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 28, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 29, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 33, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 53, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 55, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 40, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 33, Variable.initializer, NewClass.argument 7: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 33, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 56, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 34, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 35, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 40, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 51, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 0, ExpressionStatement.expression, CompoundAssignment.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless

method getMaxMotorTorque()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getMotorSpeed()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getMotorTorque(F)F:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setMaxAngleLimit(F)V:
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless

method getMaxAngleLimit()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/constraint/HingeJointInfo;)V:
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Assert.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, ExpressionStatement.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, ExpressionStatement.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, Assert.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand, Binary.leftOperand, Unary.expression: @units.qual.Dimensionless

method computeNormalizedAngle(F)F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method enableLimit(Z)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method isMotorEnabled()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setMotorSpeed(F)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method isLimitEnabled()Z:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.narrowphase:
class SphereVsSphereAlgorithm:
method testCollision(Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;Lnet/smert/jreactphysics3d/mathematics/Transform;Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;Lnet/smert/jreactphysics3d/mathematics/Transform;Lnet/smert/jreactphysics3d/constraint/ContactPointInfo;)Z:
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.thenStatement, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless

package net.smert.jreactphysics3d.engine:
class Material:
field bounciness:
insert-annotation Variable.type: @units.qual.Dimensionless

field frictionCoefficient:
insert-annotation Variable.type: @units.qual.Dimensionless

method setBounciness(F)V:
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setFrictionCoefficient(F)V:
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getBounciness()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method equals(Ljava/lang/Object;)Z:
insert-annotation Method.body, Block.statement 2, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method set(Lnet/smert/jreactphysics3d/engine/Material;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method hashCode()I:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless

method getFrictionCoefficient()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/engine/Material;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.shapes:
class ConvexMeshShape:@units.qual.Dimensionless
field isEdgesInformationUsed:
insert-annotation Variable.type: @units.qual.Dimensionless

field minBounds:
insert-annotation Variable.type: @units.qual.Dimensionless

field cachedSupportVertex:
insert-annotation Variable.type: @units.qual.Dimensionless

field edgesAdjacencyList:
insert-annotation Variable.type, ParameterizedType.typeArgument 1, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.typeArgument 1, ParameterizedType.typeArgument 0: @units.qual.Dimensionless

field vertices:
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless

field maxBounds:
insert-annotation Variable.type: @units.qual.Dimensionless

method <init>([FIIF)V:
insert-annotation Method.body, Block.statement 10, ForLoop.statement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.argument 0, ArrayAccess.index, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.expression, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, ForLoop.statement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.argument 2, ArrayAccess.index, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, ForLoop.statement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.argument 1, ArrayAccess.index, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, ExpressionStatement.expression, Assignment.expression, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, ForLoop.statement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless

method computeLocalInertiaTensor(Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;F)V:
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, MethodInvocation.argument 6: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, MethodInvocation.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, MethodInvocation.argument 5: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, MethodInvocation.argument 7: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, Binary.leftOperand, Parenthesized.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, Binary.leftOperand, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Assert.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless

method <init>(F)V:
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.expression, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless

method isEqualTo(Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;)Z:
insert-annotation Method.body, Block.statement 4, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method recalculateBounds()V:
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, EnhancedForLoop.variable, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method addVertex(Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method addEdge(II)V:
insert-annotation Method.body, Block.statement 2, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 1, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 1, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 1, NewClass.identifier, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 1, NewClass.identifier, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method isEdgesInformationUsed()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getLocalSupportPointWithMargin(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method clone()Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;:
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getLocalBounds(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method setIsEdgesInformationUsed(Z)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getLocalSupportPointWithoutMargin(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 4, DoWhileLoop.statement, Block.statement 2, Variable.type, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 4, DoWhileLoop.statement, Block.statement 3, WhileLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 4, DoWhileLoop.statement, Block.statement 3, WhileLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 4, DoWhileLoop.statement, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 4, DoWhileLoop.statement, Block.statement 2, Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 4, DoWhileLoop.statement, Block.statement 3, WhileLoop.statement, Block.statement 0, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/collision/shapes/ConvexMeshShape;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.configuration:
class JointsPositionCorrectionTechnique:
field NON_LINEAR_GAUSS_SEIDEL:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field BAUMGARTE_JOINTS:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

method <init>()V:

package net.smert.jreactphysics3d.mathematics:
class Vector2:
method getMinAxis()I:
insert-annotation Method.body, Block.statement 0, Return.expression, Parenthesized.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, Parenthesized.expression, ConditionalExpression.trueExpression: @units.qual.Dimensionless

method setUnitOrthogonal()Lnet/smert/jreactphysics3d/mathematics/Vector2;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless

method set(Lnet/smert/jreactphysics3d/mathematics/Vector2;)Lnet/smert/jreactphysics3d/mathematics/Vector2;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method toString()Ljava/lang/String;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method isZero()Z:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method abs()Lnet/smert/jreactphysics3d/mathematics/Vector2;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getMaxAxis()I:
insert-annotation Method.body, Block.statement 0, Return.expression, Parenthesized.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, Parenthesized.expression, ConditionalExpression.trueExpression: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method add(Lnet/smert/jreactphysics3d/mathematics/Vector2;)Lnet/smert/jreactphysics3d/mathematics/Vector2;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/mathematics/Vector2;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method zero()Lnet/smert/jreactphysics3d/mathematics/Vector2;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>()V:

method getY()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method hashCode()I:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer: @units.qual.Dimensionless

method subtract(Lnet/smert/jreactphysics3d/mathematics/Vector2;)Lnet/smert/jreactphysics3d/mathematics/Vector2;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getX()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setY(F)Lnet/smert/jreactphysics3d/mathematics/Vector2;:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method length()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method isUnit()Z:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, MethodInvocation.argument 1: @units.qual.Dimensionless

method dot(Lnet/smert/jreactphysics3d/mathematics/Vector2;)F:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method multiply(F)Lnet/smert/jreactphysics3d/mathematics/Vector2;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method set(FF)Lnet/smert/jreactphysics3d/mathematics/Vector2;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method divide(F)Lnet/smert/jreactphysics3d/mathematics/Vector2;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method lengthSquare()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method normalize()Lnet/smert/jreactphysics3d/mathematics/Vector2;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless

method setX(F)Lnet/smert/jreactphysics3d/mathematics/Vector2;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method get(I)F:
insert-annotation Method.body, Block.statement 0, If.elseStatement, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Throw.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method equals(Ljava/lang/Object;)Z:
insert-annotation Method.body, Block.statement 2, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method invert()Lnet/smert/jreactphysics3d/mathematics/Vector2;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.mathematics:
class Vector3:
field y:
insert-annotation Variable.type: @units.qual.Dimensionless

field x:
insert-annotation Variable.type: @units.qual.Dimensionless

field z:
insert-annotation Variable.type: @units.qual.Dimensionless

method dot(Lnet/smert/jreactphysics3d/mathematics/Vector3;)F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getMinAxis()I:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, Parenthesized.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.trueExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, Parenthesized.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, Parenthesized.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, Parenthesized.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.trueExpression: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setY(F)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setZ(F)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method multiply(F)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method toString()Ljava/lang/String;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method isZero()Z:
insert-annotation Method.body, Block.statement 0, Return.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getZ()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method divide(F)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getMaxAxis()I:
insert-annotation Method.body, Block.statement 0, Return.expression, Parenthesized.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.trueExpression: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, Parenthesized.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.trueExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, Parenthesized.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, Parenthesized.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless

method Lerp(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;FLnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 0, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless

method setUnitOrthogonal()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.body, Block.statement 4, If.elseStatement, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, If.elseStatement, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, If.elseStatement, If.elseStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, If.elseStatement, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, If.elseStatement, If.elseStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand: @units.qual.Dimensionless

method normalize()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.body, Block.statement 2, Variable.initializer, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getY()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method invert()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method hashCode()I:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setX(F)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method subtract(Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getX()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method length()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method isUnit()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method set(Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method add(Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method abs()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method lengthSquare()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method set(FFF)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method zero()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>(FFF)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless

method get(I)F:
insert-annotation Method.body, Block.statement 1, Throw.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, If.elseStatement, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method equals(Ljava/lang/Object;)Z:
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method cross(Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.engine:
class CollisionWorld:
field collisionDetection:
insert-annotation Variable.type: @units.qual.Dimensionless

field overlappingPairs:
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.typeArgument 1: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless

field freeBodiesIDs:
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless

field currentBodyID:
insert-annotation Variable.type: @units.qual.Dimensionless

field collisionShapes:
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless

field bodies:
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless

method removeCollisionShape(Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless

method createCollisionShape(Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;)Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;:
insert-annotation Method.body, Block.statement 0, EnhancedForLoop.variable, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method updateOverlappingPair(Lnet/smert/jreactphysics3d/collision/BroadPhasePair;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getBodies()Ljava/util/Set;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method notifyAddedOverlappingPair(Lnet/smert/jreactphysics3d/collision/BroadPhasePair;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method computeNextAvailableBodyID()I:
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless

method notifyRemovedOverlappingPair(Lnet/smert/jreactphysics3d/collision/BroadPhasePair;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method createCollisionBody(Lnet/smert/jreactphysics3d/mathematics/Transform;Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;)Lnet/smert/jreactphysics3d/body/CollisionBody;:
insert-annotation Method.body, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method notifyNewContact(Lnet/smert/jreactphysics3d/collision/BroadPhasePair;Lnet/smert/jreactphysics3d/constraint/ContactPointInfo;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method destroyCollisionBody(Lnet/smert/jreactphysics3d/body/CollisionBody;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>()V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.expression, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless

package net.smert.jreactphysics3d.constraint:
class BallAndSocketJointInfo:
field anchorPointWorldSpace:
insert-annotation Variable.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/constraint/JointType;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.constraint:
class FixedJointInfo:
method <init>(Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/constraint/JointType;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.constraint:
class SliderJoint:
field mInverseMassMatrixTranslationConstraint:
insert-annotation Variable.type: @units.qual.Dimensionless

field mInitOrientationDifferenceInv:
insert-annotation Variable.type: @units.qual.Dimensionless

field mImpulseMotor:
insert-annotation Variable.type: @units.qual.Dimensionless

field mInverseMassMatrixLimit:
insert-annotation Variable.type: @units.qual.Dimensionless

field mR1PlusUCrossN1:
insert-annotation Variable.type: @units.qual.Dimensionless

field mN2:
insert-annotation Variable.type: @units.qual.Dimensionless

field mBTranslation:
insert-annotation Variable.type: @units.qual.Dimensionless

field mMotorSpeed:
insert-annotation Variable.type: @units.qual.Dimensionless

field mR2:
insert-annotation Variable.type: @units.qual.Dimensionless

field mImpulseRotation:
insert-annotation Variable.type: @units.qual.Dimensionless

field mBRotation:
insert-annotation Variable.type: @units.qual.Dimensionless

field mImpulseTranslation:
insert-annotation Variable.type: @units.qual.Dimensionless

field mImpulseUpperLimit:
insert-annotation Variable.type: @units.qual.Dimensionless

field mIsUpperLimitViolated:
insert-annotation Variable.type: @units.qual.Dimensionless

field mR2CrossN1:
insert-annotation Variable.type: @units.qual.Dimensionless

field mSliderAxisBody1:
insert-annotation Variable.type: @units.qual.Dimensionless

field mI1:
insert-annotation Variable.type: @units.qual.Dimensionless

field mLowerLimit:
insert-annotation Variable.type: @units.qual.Dimensionless

field mLocalAnchorPointBody2:
insert-annotation Variable.type: @units.qual.Dimensionless

field mI2:
insert-annotation Variable.type: @units.qual.Dimensionless

field mIsLowerLimitViolated:
insert-annotation Variable.type: @units.qual.Dimensionless

field mR1PlusUCrossN2:
insert-annotation Variable.type: @units.qual.Dimensionless

field mN1:
insert-annotation Variable.type: @units.qual.Dimensionless

field mInverseMassMatrixRotationConstraint:
insert-annotation Variable.type: @units.qual.Dimensionless

field mInverseMassMatrixMotor:
insert-annotation Variable.type: @units.qual.Dimensionless

field mImpulseLowerLimit:
insert-annotation Variable.type: @units.qual.Dimensionless

field mUpperLimit:
insert-annotation Variable.type: @units.qual.Dimensionless

field mBUpperLimit:
insert-annotation Variable.type: @units.qual.Dimensionless

field BETA:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer: @units.qual.Dimensionless

field mR1:
insert-annotation Variable.type: @units.qual.Dimensionless

field mIsLimitEnabled:
insert-annotation Variable.type: @units.qual.Dimensionless

field mSliderAxisWorld:
insert-annotation Variable.type: @units.qual.Dimensionless

field mR1PlusUCrossSliderAxis:
insert-annotation Variable.type: @units.qual.Dimensionless

field mMaxMotorForce:
insert-annotation Variable.type: @units.qual.Dimensionless

field mR2CrossN2:
insert-annotation Variable.type: @units.qual.Dimensionless

field mR2CrossSliderAxis:
insert-annotation Variable.type: @units.qual.Dimensionless

field mIsMotorEnabled:
insert-annotation Variable.type: @units.qual.Dimensionless

field mLocalAnchorPointBody1:
insert-annotation Variable.type: @units.qual.Dimensionless

field mBLowerLimit:
insert-annotation Variable.type: @units.qual.Dimensionless

method solvePositionConstraint(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 32, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 22, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 51, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 45, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 32, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 35, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 45, If.thenStatement, Block.statement 3, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, If.thenStatement, Block.statement 3, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 53, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 54, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 45, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 45, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 42, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 43, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 58, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 59, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 58, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 33, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 34, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, ExpressionStatement.expression, CompoundAssignment.expression, Binary.rightOperand, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 39, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 44, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 58, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 59, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 45, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 45, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 3, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 45, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 53, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 36, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 38, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 39, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 45, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 54, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 28, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 29, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 30, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 31, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 50, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 56, Variable.initializer, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 29, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 30, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 31, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 58, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 59, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 45, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 45, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 58, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 59, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 58, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 59, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 33, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 34, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 56, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 45, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 51, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 57, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 42, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 43, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 58, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 59, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 45, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 45, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 25, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 26, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 27, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 3, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 45, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 41, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 0, ExpressionStatement.expression, CompoundAssignment.expression, Binary.rightOperand, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 51, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 45, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 45, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 45, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 28, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 60, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless

method getMotorForce(F)F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method resetLimits()V:
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method warmstart(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 7, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 7, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 4, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 6, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 4, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 6, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.type: @units.qual.Dimensionless

method solveVelocityConstraint(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.body, Block.statement 10, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 5, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, If.thenStatement, Block.statement 7, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 5, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 5, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, If.thenStatement, Block.statement 7, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 5, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, If.thenStatement, Block.statement 7, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 5, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 5, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless

method setMaxMotorForce(F)V:
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method enableMotor(Z)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/constraint/SliderJointInfo;)V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, ExpressionStatement.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, Variable.type: @units.qual.Dimensionless

method setMaxTranslationLimit(F)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setMinTranslationLimit(F)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method initBeforeSolve(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.body, Block.statement 40, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 41, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 42, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 22, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 54, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, ExpressionStatement.expression, CompoundAssignment.expression, Binary.rightOperand, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 42, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 54, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 55, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 53, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 31, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 56, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 56, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 36, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 51, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 53, If.thenStatement, Block.statement 3, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 46, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 38, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 39, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 54, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 55, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 53, If.thenStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 27, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 53, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 32, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 33, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 34, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 35, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 54, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 54, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 54, If.thenStatement, Block.statement 6, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 55, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 28, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 29, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 30, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 54, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 0, ExpressionStatement.expression, CompoundAssignment.expression, Binary.rightOperand, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 53, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 53, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 56, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 36, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 32, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 33, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 34, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 35, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 25, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 26, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 54, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 55, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 27, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 44, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 31, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 53, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 53, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless

method getMinTranslationLimit()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getMotorSpeed()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getMaxMotorForce()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method enableLimit(Z)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method isMotorEnabled()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getTranslation()F:
insert-annotation Method.body, Block.statement 4, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless

method setMotorSpeed(F)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getMaxTranslationLimit()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method isLimitEnabled()Z:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.body:
class RigidBody:
field massInverse:
insert-annotation Variable.type: @units.qual.Dimensionless

field linearVelocity:
insert-annotation Variable.type: @units.qual.Dimensionless

field inertiaTensorLocal:
insert-annotation Variable.type: @units.qual.Dimensionless

field linearDamping:
insert-annotation Variable.type: @units.qual.Dimensionless

field jointsList:
insert-annotation Variable.type: @units.qual.Dimensionless

field isGravityEnabled:
insert-annotation Variable.type: @units.qual.Dimensionless

field angularVelocity:
insert-annotation Variable.type: @units.qual.Dimensionless

field externalForce:
insert-annotation Variable.type: @units.qual.Dimensionless

field mass:
insert-annotation Variable.type: @units.qual.Dimensionless

field angularDamping:
insert-annotation Variable.type: @units.qual.Dimensionless

field inertiaTensorLocalInverse:
insert-annotation Variable.type: @units.qual.Dimensionless

field material:
insert-annotation Variable.type: @units.qual.Dimensionless

field externalTorque:
insert-annotation Variable.type: @units.qual.Dimensionless

method getInertiaTensorInverseWorld()Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;:
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Return.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setMassInverse(F)V:
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getLinearDamping()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setIsSleeping(Z)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getMassInverse()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method applyForceToCenter(Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method setAngularVelocity(Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getAngularVelocity()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getExternalTorque()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setMaterial(Lnet/smert/jreactphysics3d/engine/Material;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setAngularDamping(F)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless

method setLinearDamping(F)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless

method applyTorque(Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/mathematics/Transform;FLnet/smert/jreactphysics3d/mathematics/Matrix3x3;Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;I)V:
insert-annotation Method.body, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless

method getAngularDamping()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getInertiaTensorLocal()Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getExternalForce()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getInertiaTensorWorld()Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;:
insert-annotation Method.body, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Return.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless

method enableGravity(Z)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getJointsList()Lnet/smert/jreactphysics3d/constraint/JointListElement;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getMass()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setInertiaTensorLocal(Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method setJointsList(Lnet/smert/jreactphysics3d/constraint/JointListElement;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method applyForce(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method removeJointFromJointsList(Lnet/smert/jreactphysics3d/constraint/Joint;)V:
insert-annotation Method.body, Block.statement 2, If.elseStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, If.elseStatement, Block.statement 1, WhileLoop.statement, Block.statement 0, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getLinearVelocity()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setLinearVelocity(Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setMass(F)V:
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getMaterial()Lnet/smert/jreactphysics3d/engine/Material;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getInertiaTensorLocalInverse()Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method isGravityEnabled()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision:
class CollisionDetection:
field noCollisionPairs:
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless

field world:
insert-annotation Variable.type: @units.qual.Dimensionless

field broadPhaseAlgorithm:
insert-annotation Variable.type: @units.qual.Dimensionless

field overlappingPairs:
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.typeArgument 1: @units.qual.Dimensionless

field narrowPhaseSphereVsSphereAlgorithm:
insert-annotation Variable.type: @units.qual.Dimensionless

field narrowPhaseGJKAlgorithm:
insert-annotation Variable.type: @units.qual.Dimensionless

method removeNoCollisionPair(Lnet/smert/jreactphysics3d/body/CollisionBody;Lnet/smert/jreactphysics3d/body/CollisionBody;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method removeBody(Lnet/smert/jreactphysics3d/body/CollisionBody;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method selectNarrowPhaseAlgorithm(Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;)Lnet/smert/jreactphysics3d/collision/narrowphase/NarrowPhaseAlgorithm;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method computeNarrowPhase()V:
insert-annotation Method.body, Block.statement 1, EnhancedForLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, EnhancedForLoop.statement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, EnhancedForLoop.statement, Block.statement 10, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, EnhancedForLoop.statement, Block.statement 0, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, EnhancedForLoop.statement, Block.statement 1, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, EnhancedForLoop.variable, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, EnhancedForLoop.statement, Block.statement 10, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, EnhancedForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, EnhancedForLoop.statement, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, EnhancedForLoop.statement, Block.statement 8, Variable.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/engine/CollisionWorld;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.expression, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless

method computeBroadPhase()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, EnhancedForLoop.variable, Variable.type: @units.qual.Dimensionless

method addBody(Lnet/smert/jreactphysics3d/body/CollisionBody;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method addNoCollisionPair(Lnet/smert/jreactphysics3d/body/CollisionBody;Lnet/smert/jreactphysics3d/body/CollisionBody;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method computeCollisionDetection()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method broadPhaseNotifyRemovedOverlappingPair(Lnet/smert/jreactphysics3d/collision/broadphase/BodyPair;)V:
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method broadPhaseNotifyAddedOverlappingPair(Lnet/smert/jreactphysics3d/collision/broadphase/BodyPair;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.engine:
class ProfileSample:@units.qual.Dimensionless
method <init>(Ljava/lang/String;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.body:
class CollisionBody:
field interpolationFactor:
insert-annotation Variable.type: @units.qual.Dimensionless

field hasMoved:
insert-annotation Variable.type: @units.qual.Dimensionless

field aabb:
insert-annotation Variable.type: @units.qual.Dimensionless

field collisionShape:
insert-annotation Variable.type: @units.qual.Dimensionless

field contactManifoldsList:
insert-annotation Variable.type: @units.qual.Dimensionless

field isCollisionEnabled:
insert-annotation Variable.type: @units.qual.Dimensionless

field oldTransform:
insert-annotation Variable.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/mathematics/Transform;Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;I)V:
insert-annotation Method.body, Block.statement 7, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless

method setCollisionShape(Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setIsCollisionEnabled(Z)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method setHasMoved(Z)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setContactManifoldsLists(Lnet/smert/jreactphysics3d/engine/ContactManifoldListElement;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method updateOldTransform()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method updateAABB()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getAABB()Lnet/smert/jreactphysics3d/collision/shapes/AABB;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getContactManifoldsLists()Lnet/smert/jreactphysics3d/engine/ContactManifoldListElement;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getHasMoved()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setTransform(Lnet/smert/jreactphysics3d/mathematics/Transform;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method isCollisionEnabled()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getTransform()Lnet/smert/jreactphysics3d/mathematics/Transform;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getInterpolatedTransform(Lnet/smert/jreactphysics3d/mathematics/Transform;)Lnet/smert/jreactphysics3d/mathematics/Transform;:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method isMotionEnabled()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setInterpolationFactor(F)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method setIsMotionEnabled(Z)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method resetContactManifoldsList()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getCollisionShape()Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.engine:
class ProfileNode:@units.qual.Dimensionless
field recursionCounter:
insert-annotation Variable.type: @units.qual.Dimensionless

field name:
insert-annotation Variable.type: @units.qual.Dimensionless

field numTotalCalls:
insert-annotation Variable.type: @units.qual.Dimensionless

field startingTime:
insert-annotation Variable.type: @units.qual.Dimensionless

field parentNode:
insert-annotation Variable.type: @units.qual.Dimensionless

field childNode:
insert-annotation Variable.type: @units.qual.Dimensionless

field totalTime:
insert-annotation Variable.type: @units.qual.Dimensionless

field siblingNode:
insert-annotation Variable.type: @units.qual.Dimensionless

method getSiblingNode()Lnet/smert/jreactphysics3d/engine/ProfileNode;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method findSubNode(Ljava/lang/String;)Lnet/smert/jreactphysics3d/engine/ProfileNode;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method exitBlockOfCode()Z:
insert-annotation Method.body, Block.statement 1, If.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Return.expression, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getName()Ljava/lang/String;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>(Ljava/lang/String;Lnet/smert/jreactphysics3d/engine/ProfileNode;)V:
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless

method reset()V:
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getTotalTime()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getNumTotalCalls()I:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getChildNode()Lnet/smert/jreactphysics3d/engine/ProfileNode;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method enterBlockOfCode()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand: @units.qual.Dimensionless

method destroy()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getParentNode()Lnet/smert/jreactphysics3d/engine/ProfileNode;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.narrowphase.EPA:
class TriangleEPA:
field determinant:
insert-annotation Variable.type: @units.qual.Dimensionless

field distanceSquare:
insert-annotation Variable.type: @units.qual.Dimensionless

field closestPoint:
insert-annotation Variable.type: @units.qual.Dimensionless

field adjacentEdges:
insert-annotation Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.dimension 0: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless

field indicesVertices:
insert-annotation Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.dimension 0: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field isObsolete:
insert-annotation Variable.type: @units.qual.Dimensionless

field lambda1:
insert-annotation Variable.type: @units.qual.Dimensionless

field lambda2:
insert-annotation Variable.type: @units.qual.Dimensionless

method setIsObsolete(Z)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getClosestPoint()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method isVisibleFromVertex([Lnet/smert/jreactphysics3d/mathematics/Vector3;I)Z:
insert-annotation Method.body, Block.statement 1, Return.expression, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless

method getIsObsolete()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method computeClosestPointOfObject([Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.argument 0, ArrayAccess.index, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, ArrayAccess.index, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, ArrayAccess.index, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Return.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method isClosestPointInternalToTriangle()Z:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, Parenthesized.expression, Binary.leftOperand, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless

method getAdjacentEdge(I)Lnet/smert/jreactphysics3d/collision/narrowphase/EPA/EdgeEPA;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless

method getDistanceSquare()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method computeClosestPoint([Lnet/smert/jreactphysics3d/mathematics/Vector3;)Z:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.argument 0, ArrayAccess.index, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, ArrayAccess.index, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, ArrayAccess.index, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.type: @units.qual.Dimensionless

method computeSilhouette([Lnet/smert/jreactphysics3d/mathematics/Vector3;ILnet/smert/jreactphysics3d/collision/narrowphase/EPA/TrianglesStore;)Z:
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, ForLoop.initializer 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, Binary.leftOperand, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, ForLoop.statement, Block.statement 2, If.condition, Parenthesized.expression, Unary.expression, MethodInvocation.argument 1, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, ForLoop.statement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 1, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, ForLoop.statement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, ForLoop.statement, Block.statement 2, If.condition, Parenthesized.expression, Unary.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, Binary.leftOperand, Binary.leftOperand, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, ForLoop.initializer 1, Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, ForLoop.statement, Block.statement 2, If.condition, Parenthesized.expression, Unary.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, ForLoop.statement, Block.statement 2, If.condition, Parenthesized.expression, Unary.expression, MethodInvocation.argument 0, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, ForLoop.statement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setAdjacentEdge(ILnet/smert/jreactphysics3d/collision/narrowphase/EPA/EdgeEPA;)V:
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless

method <init>(III)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless

method <init>()V:
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 1: @units.qual.Dimensionless

method getIndexVertex(I)I:
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless

package net.smert.jreactphysics3d.engine:
class ContactManifoldSolver:@units.qual.Dimensionless
field r2Friction:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field inverseFriction2Mass:
insert-annotation Variable.type: @units.qual.Dimensionless

field frictionPointBody2:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field externalContactManifold:
insert-annotation Variable.type: @units.qual.Dimensionless

field massInverseBody1:
insert-annotation Variable.type: @units.qual.Dimensionless

field massInverseBody2:
insert-annotation Variable.type: @units.qual.Dimensionless

field friction1Impulse:
insert-annotation Variable.type: @units.qual.Dimensionless

field oldFrictionVector2:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field r2CrossT1:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field inverseInertiaTensorBody1:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field friction2Impulse:
insert-annotation Variable.type: @units.qual.Dimensionless

field oldFrictionVector1:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field inverseInertiaTensorBody2:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field numContacts:
insert-annotation Variable.type: @units.qual.Dimensionless

field frictionPointBody1:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field r2CrossT2:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field indexBody1:
insert-annotation Variable.type: @units.qual.Dimensionless

field indexBody2:
insert-annotation Variable.type: @units.qual.Dimensionless

field frictionVector1:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field frictionVector2:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field r1Friction:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field r1CrossT2:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field inverseFriction1Mass:
insert-annotation Variable.type: @units.qual.Dimensionless

field r1CrossT1:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field inverseTwistFrictionMass:
insert-annotation Variable.type: @units.qual.Dimensionless

field normal:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field restitutionFactor:
insert-annotation Variable.type: @units.qual.Dimensionless

field isBody2Moving:
insert-annotation Variable.type: @units.qual.Dimensionless

field frictionCoefficient:
insert-annotation Variable.type: @units.qual.Dimensionless

field frictionTwistImpulse:
insert-annotation Variable.type: @units.qual.Dimensionless

field isBody1Moving:
insert-annotation Variable.type: @units.qual.Dimensionless

field contacts:
insert-annotation Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

method <init>()V:

package net.smert.jreactphysics3d.engine:
class ContactManifoldListElement:
field contactManifold:
insert-annotation Variable.type: @units.qual.Dimensionless

field next:
insert-annotation Variable.type: @units.qual.Dimensionless

method getContactManifold()Lnet/smert/jreactphysics3d/engine/ContactManifold;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/engine/ContactManifold;Lnet/smert/jreactphysics3d/engine/ContactManifoldListElement;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method getNext()Lnet/smert/jreactphysics3d/engine/ContactManifoldListElement;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.mathematics:
class Matrix2x2:@units.qual.Dimensionless
field m01:
insert-annotation Variable.type: @units.qual.Dimensionless

field m00:
insert-annotation Variable.type: @units.qual.Dimensionless

field m10:
insert-annotation Variable.type: @units.qual.Dimensionless

field m11:
insert-annotation Variable.type: @units.qual.Dimensionless

method multiply(F)Lnet/smert/jreactphysics3d/mathematics/Matrix2x2;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method invert()Lnet/smert/jreactphysics3d/mathematics/Matrix2x2;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method toString()Ljava/lang/String;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>(F)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method multiply(Lnet/smert/jreactphysics3d/mathematics/Matrix2x2;)Lnet/smert/jreactphysics3d/mathematics/Matrix2x2;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method add(Lnet/smert/jreactphysics3d/mathematics/Matrix2x2;)Lnet/smert/jreactphysics3d/mathematics/Matrix2x2;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getDeterminant()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method abs()Lnet/smert/jreactphysics3d/mathematics/Matrix2x2;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method subtract(Lnet/smert/jreactphysics3d/mathematics/Matrix2x2;)Lnet/smert/jreactphysics3d/mathematics/Matrix2x2;:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/mathematics/Matrix2x2;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method multiply(Lnet/smert/jreactphysics3d/mathematics/Vector2;Lnet/smert/jreactphysics3d/mathematics/Vector2;)Lnet/smert/jreactphysics3d/mathematics/Vector2;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method set(Lnet/smert/jreactphysics3d/mathematics/Matrix2x2;)Lnet/smert/jreactphysics3d/mathematics/Matrix2x2;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method identity()Lnet/smert/jreactphysics3d/mathematics/Matrix2x2;:
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method <init>()V:

method inverse()Lnet/smert/jreactphysics3d/mathematics/Matrix2x2;:
insert-annotation Method.body, Block.statement 2, Variable.initializer, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method hashCode()I:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer: @units.qual.Dimensionless

method zero()Lnet/smert/jreactphysics3d/mathematics/Matrix2x2;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method <init>(FFFF)V:
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method set(FFFF)Lnet/smert/jreactphysics3d/mathematics/Matrix2x2;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless

method getTrace()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getRow(I)Lnet/smert/jreactphysics3d/mathematics/Vector2;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Throw.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, If.thenStatement, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless

method transpose()Lnet/smert/jreactphysics3d/mathematics/Matrix2x2;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getColumn(I)Lnet/smert/jreactphysics3d/mathematics/Vector2;:
insert-annotation Method.body, Block.statement 0, If.elseStatement, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, If.thenStatement, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Throw.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method equals(Ljava/lang/Object;)Z:
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.shapes:
class CylinderShape:@units.qual.Dimensionless
field halfHeight:
insert-annotation Variable.type: @units.qual.Dimensionless

field radius:
insert-annotation Variable.type: @units.qual.Dimensionless

method getHeight()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getLocalSupportPointWithMargin(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method <init>(FFF)V:
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand: @units.qual.Dimensionless

method clone()Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method computeLocalInertiaTensor(Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;F)V:
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 6: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, Binary.leftOperand, Binary.leftOperand, Parenthesized.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, Binary.rightOperand, Parenthesized.expression, Binary.leftOperand, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, Binary.leftOperand, Binary.leftOperand, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 5: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 7: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 4, Binary.leftOperand, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, Binary.leftOperand: @units.qual.Dimensionless

method getLocalBounds(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method isEqualTo(Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;)Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless

method getRadius()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getLocalSupportPointWithoutMargin(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.elseStatement, Block.statement 0, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/collision/shapes/CylinderShape;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.broadphase:
class BodyPair:@units.qual.Dimensionless
field body2:
insert-annotation Variable.type: @units.qual.Dimensionless

field body1:
insert-annotation Variable.type: @units.qual.Dimensionless

method getBody2()Lnet/smert/jreactphysics3d/body/CollisionBody;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setBody2(Lnet/smert/jreactphysics3d/body/CollisionBody;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getBody1()Lnet/smert/jreactphysics3d/body/CollisionBody;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method equals(Ljava/lang/Object;)Z:
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method <init>()V:

method newBodiesIndexPair()Lnet/smert/jreactphysics3d/collision/BodyIndexPair;:
insert-annotation Method.body, Block.statement 0, Variable.initializer, ConditionalExpression.falseExpression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, ConditionalExpression.trueExpression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method hashCode()I:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setBody1(Lnet/smert/jreactphysics3d/body/CollisionBody;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.configuration:
class Defaults:
field DEFAULT_SLEEP_ANGULAR_VELOCITY:
insert-annotation Variable.initializer, Binary.rightOperand, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Variable.initializer, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field DEFAULT_POSITION_SOLVER_NUM_ITERATIONS:
insert-annotation Variable.initializer: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field RESTITUTION_VELOCITY_THRESHOLD:
insert-annotation Variable.initializer: @units.qual.Dimensionless

field DEFAULT_BOUNCINESS:
insert-annotation Variable.initializer: @units.qual.Dimensionless

field PI_TIMES_2:
insert-annotation Variable.initializer: @units.qual.Dimensionless

field OBJECT_MARGIN:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer: @units.qual.Dimensionless

field DEFAULT_TIMESTEP:
insert-annotation Variable.initializer, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field MACHINE_EPSILON:
insert-annotation Variable.initializer: @units.qual.Dimensionless

field DEFAULT_VELOCITY_SOLVER_NUM_ITERATIONS:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer: @units.qual.Dimensionless

field SPLEEPING_ENABLED:
insert-annotation Variable.type: @units.qual.Dimensionless

field DECIMAL_SMALLEST:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer: @units.qual.Dimensionless

field DEFAULT_FRICTION_COEFFICIENT:
insert-annotation Variable.initializer: @units.qual.Dimensionless

field PI:
insert-annotation Variable.initializer: @units.qual.Dimensionless

field DECIMAL_LARGEST:
insert-annotation Variable.initializer: @units.qual.Dimensionless

field DEFAULT_TIME_BEFORE_SLEEP:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer: @units.qual.Dimensionless

field DEFAULT_SLEEP_LINEAR_VELOCITY:
insert-annotation Variable.initializer: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field PERSISTENT_CONTACT_DIST_THRESHOLD:
insert-annotation Variable.initializer: @units.qual.Dimensionless

method <init>()V:

package net.smert.jreactphysics3d.collision.shapes:
class ConeShape:@units.qual.Dimensionless
field halfHeight:
insert-annotation Variable.type: @units.qual.Dimensionless

field sinTheta:
insert-annotation Variable.type: @units.qual.Dimensionless

field radius:
insert-annotation Variable.type: @units.qual.Dimensionless

method computeLocalInertiaTensor(Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;F)V:
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 4, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 5: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 7: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 6: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless

method isEqualTo(Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;)Z:
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getHeight()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getLocalSupportPointWithMargin(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.argument 2: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.argument 1, Unary.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless

method clone()Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless

method <init>(FFF)V:
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless

method getLocalBounds(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getRadius()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getLocalSupportPointWithoutMargin(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, If.elseStatement, Block.statement 1, If.elseStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, If.elseStatement, Block.statement 1, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, If.elseStatement, Block.statement 1, If.elseStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, If.elseStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 2: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/collision/shapes/ConeShape;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.constraint:
class FixedJoint:@units.qual.Dimensionless
field mImpulseRotation:
insert-annotation Variable.type: @units.qual.Dimensionless

field mInitOrientationDifferenceInv:
insert-annotation Variable.type: @units.qual.Dimensionless

field mImpulseTranslation:
insert-annotation Variable.type: @units.qual.Dimensionless

field mI2:
insert-annotation Variable.type: @units.qual.Dimensionless

field mR2World:
insert-annotation Variable.type: @units.qual.Dimensionless

field mInverseMassMatrixRotation:
insert-annotation Variable.type: @units.qual.Dimensionless

field mI1:
insert-annotation Variable.type: @units.qual.Dimensionless

field mR1World:
insert-annotation Variable.type: @units.qual.Dimensionless

field mBiasRotation:
insert-annotation Variable.type: @units.qual.Dimensionless

field BETA:
insert-annotation Variable.initializer: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field mBiasTranslation:
insert-annotation Variable.type: @units.qual.Dimensionless

field mLocalAnchorPointBody2:
insert-annotation Variable.type: @units.qual.Dimensionless

field mInverseMassMatrixTranslation:
insert-annotation Variable.type: @units.qual.Dimensionless

field mLocalAnchorPointBody1:
insert-annotation Variable.type: @units.qual.Dimensionless

method solvePositionConstraint(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.initializer, NewClass.argument 7: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 36, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 29, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 29, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 31, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 36, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 36, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 32, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 34, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 35, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.initializer, NewClass.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 22, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 28, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 36, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 29, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 31, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 22, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.initializer, NewClass.argument 6: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 35, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 36, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 3, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 36, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.initializer, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.initializer, NewClass.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Variable.initializer, NewClass.argument 5: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 36, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 37, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 35, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 22, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 32, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 34, Variable.initializer, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 3, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.type: @units.qual.Dimensionless

method initBeforeSolve(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.body, Block.statement 15, Variable.initializer, NewClass.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 28, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 28, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 22, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 22, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.initializer, NewClass.argument 6: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 28, If.thenStatement, Block.statement 3, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.initializer, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.initializer, NewClass.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.initializer, NewClass.argument 5: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 28, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 22, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 28, If.thenStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.initializer, NewClass.argument 7: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 26, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 28, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 22, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 28, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 28, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Variable.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/constraint/FixedJointInfo;)V:
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method warmstart(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 4, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 4, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless

method solveVelocityConstraint(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless

package net.smert.jreactphysics3d.engine:
class ProfileNodeIterator:@units.qual.Dimensionless
field currentChildNode:
insert-annotation Variable.type: @units.qual.Dimensionless

field currentParentNode:
insert-annotation Variable.type: @units.qual.Dimensionless

method getCurrentParentNumTotalCalls()I:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getCurrentParentTotalTime()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method first()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method next()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method enterParent()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method isRoot()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method isEnd()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method enterChild(I)V:
insert-annotation Method.body, Block.statement 1, WhileLoop.condition, Parenthesized.expression, Binary.rightOperand, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getCurrentName()Ljava/lang/String;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getCurrentTotalTime()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/engine/ProfileNode;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getCurrentParentName()Ljava/lang/String;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getCurrentNumTotalCalls()I:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.mathematics:
class Quaternion:
field w:
insert-annotation Variable.type: @units.qual.Dimensionless

field y:
insert-annotation Variable.type: @units.qual.Dimensionless

field x:
insert-annotation Variable.type: @units.qual.Dimensionless

field z:
insert-annotation Variable.type: @units.qual.Dimensionless

method set(Lnet/smert/jreactphysics3d/mathematics/Vector3;F)Lnet/smert/jreactphysics3d/mathematics/Quaternion;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method multiply(F)Lnet/smert/jreactphysics3d/mathematics/Quaternion;:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method multiply(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setX(F)Lnet/smert/jreactphysics3d/mathematics/Quaternion;:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method multiply(Lnet/smert/jreactphysics3d/mathematics/Quaternion;)Lnet/smert/jreactphysics3d/mathematics/Quaternion;:
insert-annotation Method.body, Block.statement 4, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless

method fromMatrix(Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;)Lnet/smert/jreactphysics3d/mathematics/Quaternion;:
insert-annotation Method.body, Block.statement 3, If.elseStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 0, If.elseStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.elseStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, If.elseStatement, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, If.elseStatement, If.elseStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, If.elseStatement, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, If.elseStatement, If.elseStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 0, If.elseStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.elseStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, If.elseStatement, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 0, If.elseStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, If.elseStatement, If.elseStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand: @units.qual.Dimensionless

method toString()Ljava/lang/String;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getZ()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getVectorV(Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method zero()Lnet/smert/jreactphysics3d/mathematics/Quaternion;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless

method getRotationAngleAxis(Lnet/smert/jreactphysics3d/mathematics/Vector3;[F)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.elseStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand: @units.qual.Dimensionless

method identity()Lnet/smert/jreactphysics3d/mathematics/Quaternion;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless

method subtract(Lnet/smert/jreactphysics3d/mathematics/Quaternion;)Lnet/smert/jreactphysics3d/mathematics/Quaternion;:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method inverse()Lnet/smert/jreactphysics3d/mathematics/Quaternion;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless

method setZ(F)Lnet/smert/jreactphysics3d/mathematics/Quaternion;:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getY()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setW(F)Lnet/smert/jreactphysics3d/mathematics/Quaternion;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method add(Lnet/smert/jreactphysics3d/mathematics/Quaternion;)Lnet/smert/jreactphysics3d/mathematics/Quaternion;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method hashCode()I:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer: @units.qual.Dimensionless

method dot(Lnet/smert/jreactphysics3d/mathematics/Quaternion;)F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getX()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method length()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method conjugate()Lnet/smert/jreactphysics3d/mathematics/Quaternion;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>(FFFF)V:
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method set(FFFF)Lnet/smert/jreactphysics3d/mathematics/Quaternion;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless

method setY(F)Lnet/smert/jreactphysics3d/mathematics/Quaternion;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method set(Lnet/smert/jreactphysics3d/mathematics/Quaternion;)Lnet/smert/jreactphysics3d/mathematics/Quaternion;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getMatrix(Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;)Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;:
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Return.expression, MethodInvocation.argument 0, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Return.expression, MethodInvocation.argument 4, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, Return.expression, MethodInvocation.argument 8, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, Variable.type: @units.qual.Dimensionless

method lengthSquare()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method Slerp(Lnet/smert/jreactphysics3d/mathematics/Quaternion;Lnet/smert/jreactphysics3d/mathematics/Quaternion;FLnet/smert/jreactphysics3d/mathematics/Quaternion;)V:
insert-annotation Method.body, Block.statement 4, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.condition, Parenthesized.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Unary.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, Variable.initializer, Binary.leftOperand, MethodInvocation.argument 0, Binary.leftOperand, Parenthesized.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 0, Binary.leftOperand: @units.qual.Dimensionless

method getW()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method equals(Ljava/lang/Object;)Z:
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/mathematics/Vector3;F)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method normalize()Lnet/smert/jreactphysics3d/mathematics/Quaternion;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, Binary.leftOperand: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.narrowphase.EPA:
class EPAAlgorithm:
field triangleComparison:
insert-annotation Variable.type: @units.qual.Dimensionless

field body2ToBody1:
insert-annotation Variable.type: @units.qual.Dimensionless

field MAX_SUPPORT_POINTS:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer: @units.qual.Dimensionless

field MAX_FACETS:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer: @units.qual.Dimensionless

field rotateToBody2:
insert-annotation Variable.type: @units.qual.Dimensionless

method isOriginInTetrahedron(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)I:
insert-annotation Method.body, Block.statement 9, If.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, Return.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.thenStatement, Block.statement 0, Return.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 0, Return.expression: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, Return.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.thenStatement, Block.statement 0, Return.expression: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, If.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless

method computePenetrationDepthAndContactPoints(Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;Lnet/smert/jreactphysics3d/mathematics/Transform;Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;Lnet/smert/jreactphysics3d/mathematics/Transform;Lnet/smert/jreactphysics3d/constraint/ContactPointInfo;Lnet/smert/jreactphysics3d/collision/narrowphase/GJK/Simplex;)Z:
insert-annotation Method.body, Block.statement 12, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 3, Variable.initializer, MethodInvocation.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 17, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 21, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 5, Variable.initializer, MethodInvocation.argument 0, NewClass.argument 2, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.elseStatement, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 10, ExpressionStatement.expression, MethodInvocation.argument 1, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 6, ExpressionStatement.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 9, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 10, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 5, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.statement, Block.statement 2, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 11, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 2, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 0, Variable.initializer, MethodInvocation.argument 2, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.condition, Parenthesized.expression, Binary.leftOperand, MethodInvocation.argument 1, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.elseStatement, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 2, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 3, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 2, Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 8, ExpressionStatement.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 13, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 21, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 3, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 4, If.condition, Parenthesized.expression, Unary.expression, Parenthesized.expression, Binary.leftOperand, Binary.leftOperand, Binary.leftOperand, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 17, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 3, Variable.initializer, NewClass.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.elseStatement, If.condition, Parenthesized.expression, Binary.leftOperand, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 5, Variable.initializer, MethodInvocation.argument 0, NewClass.argument 2, ConditionalExpression.trueExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 18, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 22, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 8, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 5, Variable.initializer, MethodInvocation.argument 0, NewClass.argument 2, ConditionalExpression.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 2, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 24, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 25, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 26, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 22, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.statement, Block.statement 2, If.thenStatement, Block.statement 1, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 6, ExpressionStatement.expression, MethodInvocation.argument 1, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 9, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 11, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 0, Variable.initializer, MethodInvocation.argument 1, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.statement, Block.statement 2, If.thenStatement, Block.statement 15, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 28, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 10, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 2, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.statement, Block.statement 2, If.thenStatement, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 9, ExpressionStatement.expression, MethodInvocation.argument 1, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.statement, Block.statement 2, If.thenStatement, Block.statement 10, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.elseStatement, If.condition, Parenthesized.expression, Binary.leftOperand, MethodInvocation.argument 1, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 19, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 0, Case.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 5, Variable.initializer, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 5, Variable.initializer, MethodInvocation.argument 0, NewClass.argument 0, ConditionalExpression.trueExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 3, Variable.initializer, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 16, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 20, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 12, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 22, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.elseStatement, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 5, Variable.initializer, MethodInvocation.argument 0, NewClass.argument 1, ConditionalExpression.trueExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.elseStatement, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 6, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, MethodInvocation.argument 1, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 9, ExpressionStatement.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 15, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.condition, Parenthesized.expression, Binary.leftOperand, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 2, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 8, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.statement, Block.statement 2, If.thenStatement, Block.statement 14, If.condition, Parenthesized.expression, Binary.leftOperand, Binary.leftOperand, Binary.rightOperand, MethodInvocation.argument 0, ArrayAccess.index, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.statement, Block.statement 2, If.thenStatement, Block.statement 6, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.statement, Block.statement 2, If.thenStatement, Block.statement 13, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 10, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.statement, Block.statement 2, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.statement, Block.statement 2, If.thenStatement, Block.statement 9, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 1, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 10, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 24, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 14, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 9, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.condition, Parenthesized.expression, Binary.leftOperand, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.statement, Block.statement 2, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 8, ExpressionStatement.expression, MethodInvocation.argument 1, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 15, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 17, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.condition, Parenthesized.expression, Binary.leftOperand, MethodInvocation.argument 2, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.statement, Block.statement 2, If.thenStatement, Block.statement 14, If.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand, MethodInvocation.argument 0, ArrayAccess.index, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.elseStatement, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.statement, Block.statement 2, If.thenStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.statement, Block.statement 2, If.thenStatement, Block.statement 14, If.condition, Parenthesized.expression, Binary.rightOperand, MethodInvocation.argument 0, ArrayAccess.index, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 7, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, Variable.initializer, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 12, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 16, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 20, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.elseStatement, If.condition, Parenthesized.expression, Binary.leftOperand, MethodInvocation.argument 2, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 2, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 11, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 12, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 16, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.condition, Parenthesized.expression, Binary.leftOperand, MethodInvocation.argument 3, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 10, ExpressionStatement.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 2, Variable.initializer, Binary.leftOperand, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 5, Variable.initializer, MethodInvocation.argument 0, NewClass.argument 0, ConditionalExpression.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.statement, Block.statement 2, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.condition, Parenthesized.expression, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 5, Variable.initializer, MethodInvocation.argument 0, NewClass.argument 1, ConditionalExpression.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 5, Variable.initializer, MethodInvocation.argument 0, NewClass.argument 0, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 6, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.elseStatement, If.condition, Parenthesized.expression, Binary.leftOperand, MethodInvocation.argument 3, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 8, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 23, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.statement, Block.statement 2, If.thenStatement, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.elseStatement, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 6, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.initializer, NewArray.dimension 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.statement, Block.statement 2, If.thenStatement, Block.statement 17, WhileLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 20, DoWhileLoop.statement, Block.statement 1, ExpressionStatement.expression, Unary.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 3, Variable.initializer, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 4, If.condition, Parenthesized.expression, Unary.expression, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 18, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 22, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 12, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 0, Variable.initializer, MethodInvocation.argument 3, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 4, If.condition, Parenthesized.expression, Unary.expression, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 4, If.condition, Parenthesized.expression, Unary.expression, Parenthesized.expression, Binary.leftOperand, Binary.leftOperand, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 23, If.elseStatement, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 27, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 8, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 2, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 1, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 13, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 17, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 21, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 1, Case.statement 0, Block.statement 5, Variable.initializer, MethodInvocation.argument 0, NewClass.argument 1, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, Switch.case 2, Case.statement 0, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless

method <init>()V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless

method addFaceCandidate(Lnet/smert/jreactphysics3d/collision/narrowphase/EPA/TriangleEPA;Ljava/util/Queue;[IF)V:
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Unary.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.broadphase:
class NoBroadPhaseAlgorithm:
field bodies:
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless

method addObject(Lnet/smert/jreactphysics3d/body/CollisionBody;Lnet/smert/jreactphysics3d/collision/shapes/AABB;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, EnhancedForLoop.variable, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method removeObject(Lnet/smert/jreactphysics3d/body/CollisionBody;)V:
insert-annotation Method.body, Block.statement 0, EnhancedForLoop.variable, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/collision/CollisionDetection;)V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless

method updateObject(Lnet/smert/jreactphysics3d/body/CollisionBody;Lnet/smert/jreactphysics3d/collision/shapes/AABB;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.shapes:
class CapsuleShape:@units.qual.Dimensionless
field halfHeight:
insert-annotation Variable.type: @units.qual.Dimensionless

field radius:
insert-annotation Variable.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/collision/shapes/CapsuleShape;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getHeight()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getLocalSupportPointWithMargin(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 4, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 1, Variable.initializer, NewClass.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Return.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Return.expression, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 5, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 4, Variable.initializer, NewClass.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 1, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 4, Variable.initializer, NewClass.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 1, Variable.initializer, NewClass.argument 2: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>(FFF)V:
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method clone()Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;:
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method computeLocalInertiaTensor(Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;F)V:
insert-annotation Method.body, Block.statement 7, Variable.initializer, Binary.leftOperand, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ExpressionStatement.expression, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ExpressionStatement.expression, MethodInvocation.argument 6: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.initializer, Binary.rightOperand, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.initializer, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.initializer, Binary.rightOperand, Parenthesized.expression, Binary.rightOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.initializer, Binary.rightOperand, Parenthesized.expression, Binary.rightOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.initializer, Binary.rightOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.initializer, Binary.rightOperand, Parenthesized.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.initializer, Binary.rightOperand, Parenthesized.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ExpressionStatement.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ExpressionStatement.expression, MethodInvocation.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ExpressionStatement.expression, MethodInvocation.argument 5: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ExpressionStatement.expression, MethodInvocation.argument 7: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.initializer, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.initializer, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, Variable.initializer, Binary.rightOperand, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.initializer, Binary.rightOperand, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless

method getLocalBounds(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method isEqualTo(Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;)Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getRadius()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getLocalSupportPointWithoutMargin(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, Return.expression, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Return.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Return.expression, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, Return.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.engine:
class ContactManifold:
field frictionImpulse1:
insert-annotation Variable.type: @units.qual.Dimensionless

field frictionImpulse2:
insert-annotation Variable.type: @units.qual.Dimensionless

field body2:
insert-annotation Variable.type: @units.qual.Dimensionless

field body1:
insert-annotation Variable.type: @units.qual.Dimensionless

field frictionVector1:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field frictionVector2:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field isAlreadyInIsland:
insert-annotation Variable.type: @units.qual.Dimensionless

field frictionTwistImpulse:
insert-annotation Variable.type: @units.qual.Dimensionless

field MAX_CONTACT_POINTS_IN_MANIFOLD:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer: @units.qual.Dimensionless

field numContactPoints:
insert-annotation Variable.type: @units.qual.Dimensionless

field contactPoints:
insert-annotation Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

method getMaxArea(FFFF)I:
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, If.elseStatement, Block.statement 0, If.thenStatement, Block.statement 0, Return.expression: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, Block.statement 0, If.thenStatement, Block.statement 0, If.elseStatement, Block.statement 0, Return.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, If.elseStatement, Block.statement 0, If.elseStatement, Block.statement 0, Return.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, Block.statement 0, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 0, Return.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 0, If.elseStatement, Block.statement 0, Return.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 0, Return.expression: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, Block.statement 0, If.elseStatement, Block.statement 0, If.elseStatement, Block.statement 0, Return.expression: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, Block.statement 0, If.elseStatement, Block.statement 0, If.thenStatement, Block.statement 0, Return.expression: @units.qual.Dimensionless

method setIsAlreadyInIsland(Z)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getBody2()Lnet/smert/jreactphysics3d/body/CollisionBody;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setFrictionImpulse1(F)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getFrictionTwistImpulse()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setFrictionImpulse2(F)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setFrictionVector1(Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method isAlreadyInIsland()Z:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getBody1()Lnet/smert/jreactphysics3d/body/CollisionBody;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setFrictionVector2(Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method removeContactPoint(I)V:
insert-annotation Method.body, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, If.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, ArrayAccess.index, Binary.rightOperand: @units.qual.Dimensionless

method getIndexOfDeepestPenetration(Lnet/smert/jreactphysics3d/constraint/ContactPoint;)I:
insert-annotation Method.body, Block.statement 3, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method clear()V:
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless

method getFrictionImpulse1()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getNumContactPoints()I:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method update(Lnet/smert/jreactphysics3d/mathematics/Transform;Lnet/smert/jreactphysics3d/mathematics/Transform;)V:
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 2, If.elseStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.initializer 0, Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 2, If.elseStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.initializer 0, Variable.initializer, Binary.leftOperand, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 2, If.elseStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 2, If.elseStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 2, If.elseStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless

method getFrictionVector2()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getIndexToRemove(ILnet/smert/jreactphysics3d/mathematics/Vector3;)I:
insert-annotation Method.body, Block.statement 5, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, If.thenStatement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless

method addContactPoint(Lnet/smert/jreactphysics3d/constraint/ContactPoint;)V:
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/body/CollisionBody;Lnet/smert/jreactphysics3d/body/CollisionBody;)V:
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless

method getFrictionImpulse2()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getContactPoint(I)Lnet/smert/jreactphysics3d/constraint/ContactPoint;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method setFrictionTwistImpulse(F)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getFrictionVector1()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.constraint:
class HingeJointInfo:
method <init>(Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression, Unary.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/constraint/JointType;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;FF)V:
insert-annotation Method.parameter 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;FFFF)V:
insert-annotation Method.parameter 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.constraint:
class Joint:
field mIsCollisionEnabled:
insert-annotation Variable.type: @units.qual.Dimensionless

field mPositionCorrectionTechnique:
insert-annotation Variable.type: @units.qual.Dimensionless

field mBody2:
insert-annotation Variable.type: @units.qual.Dimensionless

field mBody1:
insert-annotation Variable.type: @units.qual.Dimensionless

field mIndexBody2:
insert-annotation Variable.type: @units.qual.Dimensionless

field mIndexBody1:
insert-annotation Variable.type: @units.qual.Dimensionless

field mType:
insert-annotation Variable.type: @units.qual.Dimensionless

field mIsAlreadyInIsland:
insert-annotation Variable.type: @units.qual.Dimensionless

method solvePositionConstraint(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method initBeforeSolve(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method isAlreadyInIsland()Z:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getBody2()Lnet/smert/jreactphysics3d/body/RigidBody;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getType()Lnet/smert/jreactphysics3d/constraint/JointType;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setIsAlreadyInIsland(Z)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method isCollisionEnabled()Z:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method warmstart(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/constraint/JointInfo;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method solveVelocityConstraint(Lnet/smert/jreactphysics3d/engine/ConstraintSolverData;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method isActive()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getBody1()Lnet/smert/jreactphysics3d/body/RigidBody;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.shapes:
class SphereShape:@units.qual.Dimensionless
field radius:
insert-annotation Variable.type: @units.qual.Dimensionless

method <init>(FF)V:
insert-annotation Method.body, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method getLocalSupportPointWithMargin(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Return.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Return.expression, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method clone()Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method updateAABB(Lnet/smert/jreactphysics3d/collision/shapes/AABB;Lnet/smert/jreactphysics3d/mathematics/Transform;)V:
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method getLocalBounds(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method computeLocalInertiaTensor(Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;F)V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 3: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 5: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 7: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, Binary.leftOperand, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 6: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/collision/shapes/SphereShape;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getRadius()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method isEqualTo(Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;)Z:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getLocalSupportPointWithoutMargin(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.constraint:
class ContactPointInfo:
field normal:
insert-annotation Variable.type: @units.qual.Dimensionless

field body2:
insert-annotation Variable.type: @units.qual.Dimensionless

field body1:
insert-annotation Variable.type: @units.qual.Dimensionless

field penetrationDepth:
insert-annotation Variable.type: @units.qual.Dimensionless

field localPoint1:
insert-annotation Variable.type: @units.qual.Dimensionless

field localPoint2:
insert-annotation Variable.type: @units.qual.Dimensionless

method getLocalPoint2()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setBody2(Lnet/smert/jreactphysics3d/body/RigidBody;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getBody2()Lnet/smert/jreactphysics3d/body/RigidBody;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setCollisionData(Lnet/smert/jreactphysics3d/mathematics/Vector3;FLnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method setBody1(Lnet/smert/jreactphysics3d/body/RigidBody;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getPenetrationDepth()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getNormal()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method <init>()V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless

method getLocalPoint1()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getBody1()Lnet/smert/jreactphysics3d/body/RigidBody;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.shapes:
class CollisionShapeType:
field CAPSULE:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field CONVEX_MESH:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field CONE:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field CYLINDER:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field BOX:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field SPHERE:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

method <init>()V:

package net.smert.jreactphysics3d.collision:
class BodyIndexPair:
field first:
insert-annotation Variable.type: @units.qual.Dimensionless

field second:
insert-annotation Variable.type: @units.qual.Dimensionless

method getFirst()I:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method equals(Ljava/lang/Object;)Z:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getSecond()I:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method hashCode()I:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.engine:
class ContactSolver:@units.qual.Dimensionless
field BETA_SPLIT_IMPULSE:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer: @units.qual.Dimensionless

field splitAngularVelocities:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless

field isWarmStartingActive:
insert-annotation Variable.type: @units.qual.Dimensionless

field mLinearVelocities:
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field timeStep:
insert-annotation Variable.type: @units.qual.Dimensionless

field SLOP:
insert-annotation Variable.initializer: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field isSplitImpulseActive:
insert-annotation Variable.type: @units.qual.Dimensionless

field BETA:
insert-annotation Variable.initializer: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field mAngularVelocities:
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field isSolveFrictionAtContactManifoldCenterActive:
insert-annotation Variable.type: @units.qual.Dimensionless

field mMapBodyToConstrainedVelocityIndex:
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.typeArgument 1: @units.qual.Dimensionless

field splitLinearVelocities:
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field numContactManifolds:
insert-annotation Variable.type: @units.qual.Dimensionless

field contactConstraints:
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

method setIsSplitImpulseActive(Z)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method initializeForIsland(FLnet/smert/jreactphysics3d/engine/Island;)V:
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 21, ForLoop.statement, Block.statement 15, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 21, ForLoop.statement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 21, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ExpressionStatement.expression, Assignment.expression, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 21, ForLoop.statement, Block.statement 6, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 22, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 21, ForLoop.statement, Block.statement 13, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 21, ForLoop.statement, Block.statement 8, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 5, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 3, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 21, ForLoop.statement, Block.statement 16, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 22, If.thenStatement, Block.statement 4, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ExpressionStatement.expression, Assignment.expression, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 21, ForLoop.statement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 1, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 22, If.thenStatement, Block.statement 6, If.elseStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 22, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 21, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 21, ForLoop.statement, Block.statement 14, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 21, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 22, If.thenStatement, Block.statement 6, If.elseStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 21, ForLoop.statement, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 22, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 4, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 21, ForLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 21, ForLoop.statement, Block.statement 12, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 22, If.thenStatement, Block.statement 6, If.elseStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.statement, Block.statement 21, ForLoop.statement, Block.statement 7, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless

method setSplitVelocitiesArrays([Lnet/smert/jreactphysics3d/mathematics/Vector3;[Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type, ArrayType.type: @units.qual.Dimensionless

method computeFriction1Impulse(FLnet/smert/jreactphysics3d/engine/ContactPointSolver;)Lnet/smert/jreactphysics3d/engine/Impulse;:
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.argument 1, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.argument 3, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.argument 2, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.argument 1, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless

method computeFrictionVectors(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/engine/ContactManifoldSolver;)V:
insert-annotation Method.body, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, If.elseStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless

method initializeContactConstraints()V:
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 6, If.thenStatement, Block.statement 0, ExpressionStatement.expression, CompoundAssignment.expression, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, Parenthesized.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 9, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 7, If.thenStatement, Block.statement 0, ExpressionStatement.expression, CompoundAssignment.expression, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, Parenthesized.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 14, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 4, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 8, If.thenStatement, Block.statement 1, ExpressionStatement.expression, CompoundAssignment.expression, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, Parenthesized.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 8, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 13, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 5, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 11, Variable.initializer, Binary.rightOperand, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 12, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 8, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 6, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 7, If.thenStatement, Block.statement 1, ExpressionStatement.expression, CompoundAssignment.expression, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, Parenthesized.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 4, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 14, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 13, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 10, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 7, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 2, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 10, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 8, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 9, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 4, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 11, Variable.initializer, Binary.leftOperand, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 9, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 10, If.thenStatement, Block.statement 1, ExpressionStatement.expression, CompoundAssignment.expression, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, Parenthesized.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 1, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 12, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 0, ExpressionStatement.expression, CompoundAssignment.expression, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, Parenthesized.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 5, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 9, If.thenStatement, Block.statement 0, ExpressionStatement.expression, CompoundAssignment.expression, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, Parenthesized.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 8, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 14, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 10, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 13, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 14, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 10, If.thenStatement, Block.statement 0, ExpressionStatement.expression, CompoundAssignment.expression, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, Parenthesized.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 6, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 9, If.thenStatement, Block.statement 1, ExpressionStatement.expression, CompoundAssignment.expression, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, Parenthesized.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 12, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 8, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 10, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 8, If.thenStatement, Block.statement 0, ExpressionStatement.expression, CompoundAssignment.expression, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, Parenthesized.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 8, ForLoop.statement, Block.statement 9, If.thenStatement, Block.statement 3, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless

method computeFrictionVectors(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/engine/ContactPointSolver;)V:
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, If.elseStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless

method computeMixedRestitutionFactor(Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/body/RigidBody;)F:
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method solve()V:
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 6, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 13, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 12, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 23, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 15, If.thenStatement, Block.statement 4, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 15, If.thenStatement, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 10, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 15, If.thenStatement, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 26, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 34, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 16, If.thenStatement, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 15, If.thenStatement, Block.statement 8, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 13, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 37, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 8, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 13, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 13, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 21, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 15, If.thenStatement, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 16, If.thenStatement, Block.statement 18, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 16, If.thenStatement, Block.statement 10, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 15, If.thenStatement, Block.statement 4, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 13, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 21, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 37, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 16, If.thenStatement, Block.statement 8, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 16, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 16, If.thenStatement, Block.statement 10, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 10, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 15, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 16, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 24, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 9, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 16, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 15, If.thenStatement, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 11, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 16, If.thenStatement, Block.statement 10, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 33, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 9, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 16, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 5, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 15, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 7, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 20, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 15, If.thenStatement, Block.statement 10, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 10, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 16, If.thenStatement, Block.statement 10, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 22, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 15, If.thenStatement, Block.statement 4, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 15, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 11, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 16, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 1, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 35, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 7, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 15, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 1, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 8, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 24, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 34, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 8, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 15, If.thenStatement, Block.statement 4, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 16, If.thenStatement, Block.statement 10, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 20, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 36, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 7, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 15, If.thenStatement, Block.statement 4, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 6, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless

method isSplitImpulseActive()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method storeImpulses()V:
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 1, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 1, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless

method <init>(Ljava/util/Map;)V:
insert-annotation Method.parameter 0, Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type, ParameterizedType.typeArgument 1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type, ParameterizedType.type: @units.qual.Dimensionless

method setIsSolveFrictionAtContactManifoldCenterActive(Z)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method computePenetrationImpulse(FLnet/smert/jreactphysics3d/engine/ContactPointSolver;)Lnet/smert/jreactphysics3d/engine/Impulse;:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.argument 1, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.argument 3, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.argument 2, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.argument 1, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless

method cleanup()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setConstrainedVelocitiesArrays([Lnet/smert/jreactphysics3d/mathematics/Vector3;[Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method applyImpulse(Lnet/smert/jreactphysics3d/engine/Impulse;Lnet/smert/jreactphysics3d/engine/ContactManifoldSolver;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

method warmStart()V:
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.elseStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 2, ForLoop.statement, Block.statement 1, If.elseStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 17, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 2, ForLoop.statement, Block.statement 1, If.elseStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 4, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 2, ForLoop.statement, Block.statement 1, If.thenStatement, Block.statement 3, If.thenStatement, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 2, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 2, ForLoop.statement, Block.statement 1, If.thenStatement, Block.statement 3, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 2, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 2, ForLoop.statement, Block.statement 1, If.elseStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 2, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 10, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 7, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 5, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 9, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 19, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 2, ForLoop.statement, Block.statement 1, If.thenStatement, Block.statement 3, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 12, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 19, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 6, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 2, ForLoop.statement, Block.statement 1, If.thenStatement, Block.statement 3, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 3, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 11, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 13, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 18, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 0, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 13, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 2, ForLoop.statement, Block.statement 1, If.thenStatement, Block.statement 3, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.elseStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 4, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.elseStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 2, ForLoop.statement, Block.statement 1, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 15, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 16, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 9, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 2, ForLoop.statement, Block.statement 1, If.thenStatement, Block.statement 3, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 16, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 10, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 3, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless

method applySplitImpulse(Lnet/smert/jreactphysics3d/engine/Impulse;Lnet/smert/jreactphysics3d/engine/ContactManifoldSolver;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless

method computeMixedFrictionCoefficient(Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/body/RigidBody;)F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method computeFriction2Impulse(FLnet/smert/jreactphysics3d/engine/ContactPointSolver;)Lnet/smert/jreactphysics3d/engine/Impulse;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.argument 1, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.argument 3, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.argument 1, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.argument 2, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless

package net.smert.jreactphysics3d.constraint:
class JointInfo:
method <init>(Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/constraint/JointType;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/constraint/JointType;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.broadphase:
class Utils:@units.qual.Dimensionless
method encodeFloatIntoInteger(F)J:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, Binary.leftOperand, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.elseStatement, Block.statement 0, ExpressionStatement.expression, CompoundAssignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.condition, Parenthesized.expression, Binary.leftOperand, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless

method <init>()V:

package net.smert.jreactphysics3d.engine:
class Impulse:
field linearImpulseBody2:
insert-annotation Variable.type: @units.qual.Dimensionless

field linearImpulseBody1:
insert-annotation Variable.type: @units.qual.Dimensionless

field angularImpulseBody2:
insert-annotation Variable.type: @units.qual.Dimensionless

field angularImpulseBody1:
insert-annotation Variable.type: @units.qual.Dimensionless

method getAngularImpulseBody2()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless

method getLinearImpulseBody2()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getAngularImpulseBody1()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getLinearImpulseBody1()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/engine/Impulse;)V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.narrowphase.EPA:
class EdgeEPA:
field index:
insert-annotation Variable.type: @units.qual.Dimensionless

field ownerTriangle:
insert-annotation Variable.type: @units.qual.Dimensionless

method computeSilhouette([Lnet/smert/jreactphysics3d/mathematics/Vector3;ILnet/smert/jreactphysics3d/collision/narrowphase/EPA/TrianglesStore;)Z:
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, If.elseStatement, Block.statement 2, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, If.elseStatement, Block.statement 2, If.elseStatement, If.thenStatement, Block.statement 3, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, If.elseStatement, Block.statement 2, If.elseStatement, If.thenStatement, Block.statement 3, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, If.elseStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, If.elseStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, If.elseStatement, Block.statement 2, If.elseStatement, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, If.elseStatement, Block.statement 2, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method indexOfNextCounterClockwiseEdge(I)I:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, Binary.leftOperand, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getIndex()I:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getSourceVertexIndex()I:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getOwnerTriangle()Lnet/smert/jreactphysics3d/collision/narrowphase/EPA/TriangleEPA;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/collision/narrowphase/EPA/TriangleEPA;I)V:
insert-annotation Method.body, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless

method indexOfPreviousCounterClockwiseEdge(I)I:
insert-annotation Method.body, Block.statement 0, Return.expression, Binary.leftOperand, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getTargetVertexIndex()I:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.engine:
class Timer:
field deltaTime:
insert-annotation Variable.type: @units.qual.Dimensionless

field accumulator:
insert-annotation Variable.type: @units.qual.Dimensionless

field timeStep:
insert-annotation Variable.type: @units.qual.Dimensionless

field isRunning:
insert-annotation Variable.type: @units.qual.Dimensionless

field lastUpdateTime:
insert-annotation Variable.type: @units.qual.Dimensionless

method <init>(D)V:
insert-annotation Method.body, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless

method isPossibleToTakeStep()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method start()V:
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method update()V:
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getPhysicsTime()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getTimeStep()D:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method stop()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setTimeStep(D)V:
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method GetCurrentSystemTime()F:
insert-annotation Method.body, Block.statement 0, Return.expression, Binary.rightOperand: @units.qual.ns

method nextStep()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method computeInterpolationFactor()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, TypeCast.type: @units.qual.Dimensionless

method getIsRunning()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.engine:
class DynamicsWorld:@units.qual.Dimensionless
field splitAngularVelocities:
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field isGravityEnabled:
insert-annotation Variable.type: @units.qual.Dimensionless

field numIslands:
insert-annotation Variable.type: @units.qual.Dimensionless

field numVelocitySolverIterations:
insert-annotation Variable.type: @units.qual.Dimensionless

field constrainedPositions:
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless

field contactSolver:
insert-annotation Variable.type: @units.qual.Dimensionless

field timeBeforeSleep:
insert-annotation Variable.type: @units.qual.Dimensionless

field numRigidBodiesCapacity:
insert-annotation Variable.type: @units.qual.Dimensionless

field constrainedAngularVelocities:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless

field splitLinearVelocities:
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field constraintSolver:
insert-annotation Variable.type: @units.qual.Dimensionless

field joints:
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless

field rigidBodies:
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless

field constrainedOrientations:
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless

field sleepLinearVelocity:
insert-annotation Variable.type: @units.qual.Dimensionless

field numPositionSolverIterations:
insert-annotation Variable.type: @units.qual.Dimensionless

field timer:
insert-annotation Variable.type: @units.qual.Dimensionless

field sleepAngularVelocity:
insert-annotation Variable.type: @units.qual.Dimensionless

field islands:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless

field mapBodyToConstrainedVelocityIndex:
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.typeArgument 1: @units.qual.Dimensionless

field isSleepingEnabled:
insert-annotation Variable.type: @units.qual.Dimensionless

field gravity:
insert-annotation Variable.type: @units.qual.Dimensionless

field eventListener:
insert-annotation Variable.type: @units.qual.Dimensionless

field numIslandsCapacity:
insert-annotation Variable.type: @units.qual.Dimensionless

field contactManifolds:
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless

field constrainedLinearVelocities:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless

method start()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method updateSleepingBodies()V:
insert-annotation Method.body, Block.statement 4, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 0, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 2, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 2, ForLoop.statement, Block.statement 1, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 2, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 0, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 2, ForLoop.statement, Block.statement 1, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 1, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method destroyRigidBody(Lnet/smert/jreactphysics3d/body/RigidBody;)V:
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method notifyAddedOverlappingPair(Lnet/smert/jreactphysics3d/collision/BroadPhasePair;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless

method setIsSleepingEnabled(Z)V:
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, EnhancedForLoop.variable, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getPhysicsTime()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method resetBodiesMovementVariable()V:
insert-annotation Method.body, Block.statement 0, EnhancedForLoop.variable, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method notifyNewContact(Lnet/smert/jreactphysics3d/collision/BroadPhasePair;Lnet/smert/jreactphysics3d/constraint/ContactPointInfo;)V:
insert-annotation Method.body, Block.statement 5, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setSleepLinearVelocity(F)V:
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method setEventListener(Lnet/smert/jreactphysics3d/engine/EventListener;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setTimeBeforeSleep(F)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless

method updateRigidBodiesAABB()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, EnhancedForLoop.variable, Variable.type: @units.qual.Dimensionless

method initVelocityArrays()V:
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, EnhancedForLoop.variable, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.initializer: @units.qual.Dimensionless

method resetBodiesForceAndTorque()V:
insert-annotation Method.body, Block.statement 0, EnhancedForLoop.variable, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method isSleepingEnabled()Z:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method solvePositionCorrection()V:
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 3, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 3, ForLoop.statement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 3, ForLoop.statement, Block.statement 3, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 1, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 3, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 1, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 3, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 3, ForLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 0, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 3, ForLoop.statement, Block.statement 3, Variable.initializer, NewClass.argument 1, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 2, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 3, ForLoop.statement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 2, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless

method integrateRigidBodiesVelocities()V:
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.elseStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.elseStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 7, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 6, Variable.initializer, MethodInvocation.argument 0, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 2, Assert.condition, Parenthesized.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 2, If.thenStatement, Block.statement 0, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 5, Variable.initializer, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.elseStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewClass.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.elseStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 1, Assert.condition, Parenthesized.expression, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.elseStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.elseStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 6, Variable.initializer, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.elseStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewClass.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 8, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 0, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 6, Variable.initializer, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 8, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 5, Variable.initializer, MethodInvocation.argument 0, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, MethodInvocation.argument 0, MethodInvocation.argument 1, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 7, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.thenStatement, Block.statement 5, Variable.initializer, MethodInvocation.argument 2: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 3, If.elseStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.argument 1: @units.qual.Dimensionless

method notifyRemovedOverlappingPair(Lnet/smert/jreactphysics3d/collision/BroadPhasePair;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getGravity()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method computeIslands()V:
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.variable, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 9, WhileLoop.statement, Block.statement 9, ForLoop.statement, Block.statement 5, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 10, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 9, WhileLoop.statement, Block.statement 9, ForLoop.statement, Block.statement 4, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 9, WhileLoop.statement, Block.statement 9, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 9, WhileLoop.statement, Block.statement 8, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 9, WhileLoop.statement, Block.statement 7, ForLoop.statement, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 9, WhileLoop.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 9, WhileLoop.statement, Block.statement 7, ForLoop.statement, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 9, WhileLoop.statement, Block.statement 7, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 9, WhileLoop.statement, Block.statement 9, ForLoop.statement, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 9, WhileLoop.statement, Block.statement 7, ForLoop.statement, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 9, WhileLoop.statement, Block.statement 9, ForLoop.statement, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 9, WhileLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, EnhancedForLoop.variable, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, EnhancedForLoop.variable, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, EnhancedForLoop.variable, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 10, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, If.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 8, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 9, WhileLoop.statement, Block.statement 9, ForLoop.statement, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 9, WhileLoop.statement, Block.statement 7, ForLoop.statement, Block.statement 5, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 9, WhileLoop.statement, Block.statement 7, ForLoop.statement, Block.statement 4, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 4, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, EnhancedForLoop.statement, Block.statement 9, WhileLoop.statement, Block.statement 6, Variable.type: @units.qual.Dimensionless

method setNumIterationsVelocitySolver(I)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method setContactsPositionCorrectionTechnique(Lnet/smert/jreactphysics3d/configuration/ContactsPositionCorrectionTechnique;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getSleepLinearVelocity()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method addJointToBody(Lnet/smert/jreactphysics3d/constraint/Joint;)V:
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method addContactManifoldToBody(Lnet/smert/jreactphysics3d/engine/ContactManifold;Lnet/smert/jreactphysics3d/body/CollisionBody;Lnet/smert/jreactphysics3d/body/CollisionBody;)V:
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method createRigidBody(Lnet/smert/jreactphysics3d/mathematics/Transform;FLnet/smert/jreactphysics3d/mathematics/Matrix3x3;Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;)Lnet/smert/jreactphysics3d/body/RigidBody;:
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method setJointsPositionCorrectionTechnique(Lnet/smert/jreactphysics3d/configuration/JointsPositionCorrectionTechnique;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method createJoint(Lnet/smert/jreactphysics3d/constraint/JointInfo;)Lnet/smert/jreactphysics3d/constraint/Joint;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Switch.case 0, Case.statement 0, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Switch.case 1, Case.statement 0, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Switch.case 2, Case.statement 0, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Switch.case 3, Case.statement 0, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Switch.case 0, Case.statement 0, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Switch.case 1, Case.statement 0, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Switch.case 2, Case.statement 0, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Switch.case 3, Case.statement 0, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Switch.case 0, Case.statement 0, Block.statement 0, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Switch.case 1, Case.statement 0, Block.statement 0, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Switch.case 2, Case.statement 0, Block.statement 0, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Switch.case 3, Case.statement 0, Block.statement 0, Variable.initializer, TypeCast.type: @units.qual.Dimensionless

method updateOverlappingPair(Lnet/smert/jreactphysics3d/collision/BroadPhasePair;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless

method getSleepAngularVelocity()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method update()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method solveContactsAndConstraints()V:
insert-annotation Method.body, Block.statement 5, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ForLoop.statement, Block.statement 1, Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ForLoop.statement, Block.statement 5, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ForLoop.statement, Block.statement 5, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ForLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ForLoop.statement, Block.statement 0, Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless

method getRigidBodies()Ljava/util/Set;:
insert-annotation Method.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type, ParameterizedType.type: @units.qual.Dimensionless

method getTimeBeforeSleep()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setSleepAngularVelocity(F)V:
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method integrateRigidBodiesPositions()V:
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 9, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 10, Variable.initializer, NewClass.argument 1, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 8, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 8, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 8, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 10, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 1, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 9, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 1, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 9, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 0, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 9, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 9, Variable.initializer, MethodInvocation.argument 0, MethodInvocation.argument 0, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 10, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ForLoop.statement, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless

method setNumIterationsPositionSolver(I)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method getNumRigidBodies()I:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setIsSolveFrictionAtContactManifoldCenterActive(Z)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method setIsGratityEnabled(Z)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method stop()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setInterpolationFactorToAllBodies()V:
insert-annotation Method.body, Block.statement 3, EnhancedForLoop.variable, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Assert.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getContactManifolds()Ljava/util/List;:
insert-annotation Method.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Method.type, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getNumJoints()I:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method resetContactManifoldListsOfBodies()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, EnhancedForLoop.variable, Variable.type: @units.qual.Dimensionless

method getNumContactManifolds()I:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/mathematics/Vector3;F)V:
insert-annotation Method.body, Block.statement 17, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, ExpressionStatement.expression, Assignment.expression, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ExpressionStatement.expression, Assignment.expression, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, ExpressionStatement.expression, Assignment.expression, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, ExpressionStatement.expression, Assignment.expression, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, ExpressionStatement.expression, Assignment.expression, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ExpressionStatement.expression, Assignment.expression, NewClass.identifier, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 21, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless

method destroyJoint(Lnet/smert/jreactphysics3d/constraint/Joint;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method isGravityEnabled()Z:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.mathematics:
class Transform:
field position:
insert-annotation Variable.type: @units.qual.Dimensionless

field orientation:
insert-annotation Variable.type: @units.qual.Dimensionless

method multiply(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.body, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setPosition(Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Transform;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method setOrientation(Lnet/smert/jreactphysics3d/mathematics/Quaternion;)Lnet/smert/jreactphysics3d/mathematics/Transform;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Quaternion;)V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method identity()Lnet/smert/jreactphysics3d/mathematics/Transform;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getPosition()Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method toString()Ljava/lang/String;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method Interpolate(Lnet/smert/jreactphysics3d/mathematics/Transform;Lnet/smert/jreactphysics3d/mathematics/Transform;FLnet/smert/jreactphysics3d/mathematics/Transform;)Lnet/smert/jreactphysics3d/mathematics/Transform;:
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/mathematics/Transform;)V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless

method set(Lnet/smert/jreactphysics3d/mathematics/Transform;)Lnet/smert/jreactphysics3d/mathematics/Transform;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getOpenGLMatrix([F)[F:
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 16, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 12, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 11, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless

method getOrientation()Lnet/smert/jreactphysics3d/mathematics/Quaternion;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method fromOpenGL([F)Lnet/smert/jreactphysics3d/mathematics/Transform;:
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.argument 6, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.argument 8, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.argument 2, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.argument 4, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 1, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.argument 7, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.argument 1, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.argument 3, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.argument 5, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 2, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method equals(Ljava/lang/Object;)Z:
insert-annotation Method.body, Block.statement 2, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>()V:
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless

method inverse()Lnet/smert/jreactphysics3d/mathematics/Transform;:
insert-annotation Method.body, Block.statement 2, Variable.initializer, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method hashCode()I:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer: @units.qual.Dimensionless

method multiply(Lnet/smert/jreactphysics3d/mathematics/Transform;)Lnet/smert/jreactphysics3d/mathematics/Transform;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;)V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.engine:
class ConstraintSolver:
field positions:
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless

field mMapBodyToConstrainedVelocityIndex:
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.typeArgument 1: @units.qual.Dimensionless

field isWarmStartingActive:
insert-annotation Variable.type: @units.qual.Dimensionless

field mConstraintSolverData:
insert-annotation Variable.type: @units.qual.Dimensionless

field timeStep:
insert-annotation Variable.type: @units.qual.Dimensionless

field linearVelocities:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless

field angularVelocities:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless

field orientations:
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless

method initializeForIsland(FLnet/smert/jreactphysics3d/engine/Island;)V:
insert-annotation Method.body, Block.statement 4, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 10, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless

method solveVelocityConstraints(Lnet/smert/jreactphysics3d/engine/Island;)V:
insert-annotation Method.body, Block.statement 4, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method setIsNonLinearGaussSeidelPositionCorrectionActive(Z)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Throw.expression, NewClass.identifier: @units.qual.Dimensionless

method <init>(Ljava/util/List;Ljava/util/List;Ljava/util/Map;)V:
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless

method setConstrainedVelocitiesArrays([Lnet/smert/jreactphysics3d/mathematics/Vector3;[Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method solvePositionConstraints(Lnet/smert/jreactphysics3d/engine/Island;)V:
insert-annotation Method.body, Block.statement 3, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.broadphase:
class BoxAABB:
field min:
insert-annotation Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.dimension 0: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 0: @units.qual.Dimensionless

field max:
insert-annotation Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.dimension 0: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 0: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.narrowphase:
class NarrowPhaseAlgorithm:@units.qual.Dimensionless
field currentOverlappingPair:
insert-annotation Variable.type: @units.qual.Dimensionless

method testCollision(Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;Lnet/smert/jreactphysics3d/mathematics/Transform;Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;Lnet/smert/jreactphysics3d/mathematics/Transform;Lnet/smert/jreactphysics3d/constraint/ContactPointInfo;)Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 4, Variable.type: @units.qual.Dimensionless

method <init>()V:

method setCurrentOverlappingPair(Lnet/smert/jreactphysics3d/collision/BroadPhasePair;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.broadphase:
class AABBInt:
field min:
insert-annotation Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.dimension 0: @units.qual.Dimensionless

field max:
insert-annotation Variable.initializer, NewArray.dimension 0: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 1: @units.qual.Dimensionless

method <init>(JJ)V:
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/collision/shapes/AABB;)V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless

package net.smert.jreactphysics3d.configuration:
class ContactsPositionCorrectionTechnique:@units.qual.Dimensionless
field SPLIT_IMPULSES:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field BAUMGARTE_CONTACTS:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

method <init>()V:

package net.smert.jreactphysics3d.mathematics:
class Matrix3x3:
field m01:
insert-annotation Variable.type: @units.qual.Dimensionless

field m02:
insert-annotation Variable.type: @units.qual.Dimensionless

field m22:
insert-annotation Variable.type: @units.qual.Dimensionless

field m00:
insert-annotation Variable.type: @units.qual.Dimensionless

field m21:
insert-annotation Variable.type: @units.qual.Dimensionless

field m20:
insert-annotation Variable.type: @units.qual.Dimensionless

field m12:
insert-annotation Variable.type: @units.qual.Dimensionless

field m10:
insert-annotation Variable.type: @units.qual.Dimensionless

field m11:
insert-annotation Variable.type: @units.qual.Dimensionless

method identity()Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;:
insert-annotation Method.body, Block.statement 8, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless

method add(Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;)Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method zero()V:
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method subtract(Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;)Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method multiply(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method multiply(Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;)Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method computeSkewSymmetricMatrixForCrossProduct(Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;:
insert-annotation Method.body, Block.statement 0, Return.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, MethodInvocation.argument 4: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, MethodInvocation.argument 8: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method multiply(F)Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method <init>(F)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method toString()Ljava/lang/String;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getDeterminant()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getRow(I)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.body, Block.statement 1, Throw.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, If.elseStatement, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, If.elseStatement, If.thenStatement, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, If.thenStatement, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless

method set(Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;)Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>(FFFFFFFFF)V:
insert-annotation Method.parameter 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 8, Variable.type: @units.qual.Dimensionless

method getColumn(I)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.thenStatement, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, If.elseStatement, If.thenStatement, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, If.elseStatement, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Throw.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, If.elseStatement, If.thenStatement, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless

method abs()Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method hashCode()I:
insert-annotation Method.body, Block.statement 4, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 9, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method inverse()Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;:
insert-annotation Method.body, Block.statement 2, Variable.initializer, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getTrace()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method invert()Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method equals(Ljava/lang/Object;)Z:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method transpose()Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method set(FFFFFFFFF)Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;:
insert-annotation Method.parameter 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 8, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.shapes:
class CollisionShape:
field margin:
insert-annotation Variable.type: @units.qual.Dimensionless

field type:
insert-annotation Variable.type: @units.qual.Dimensionless

field numSimilarCreatedShapes:
insert-annotation Variable.type: @units.qual.Dimensionless

method updateAABB(Lnet/smert/jreactphysics3d/collision/shapes/AABB;Lnet/smert/jreactphysics3d/mathematics/Transform;)V:
insert-annotation Method.body, Block.statement 7, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.initializer, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.initializer, NewClass.argument 2, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, NewClass.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, NewClass.argument 2, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.initializer, MethodInvocation.argument 0, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.initializer, NewClass.argument 1, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.initializer, NewClass.argument 1, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.argument 0: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless

method toString()Ljava/lang/String;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method computeLocalInertiaTensor(Lnet/smert/jreactphysics3d/mathematics/Matrix3x3;F)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method isEqualTo(Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;)Z:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getType()Lnet/smert/jreactphysics3d/collision/shapes/CollisionShapeType;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method decrementNumSimilarCreatedShapes()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getNumSimilarCreatedShapes()I:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/collision/shapes/CollisionShapeType;F)V:
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method getLocalSupportPointWithMargin(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method incrementNumSimilarCreatedShapes()V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method clone()Lnet/smert/jreactphysics3d/collision/shapes/CollisionShape;:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getMargin()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method equals(Ljava/lang/Object;)Z:
insert-annotation Method.body, Block.statement 2, Variable.initializer, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getLocalBounds(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method hashCode()I:
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method getLocalSupportPointWithoutMargin(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.engine:
class ConstraintSolverData:
field positions:
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless

field mapBodyToConstrainedVelocityIndex:
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.typeArgument 1: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless

field orientations:
insert-annotation Variable.type, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless

field isWarmStartingActive:
insert-annotation Variable.type: @units.qual.Dimensionless

field linearVelocities:
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field angularVelocities:
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field timeStep:
insert-annotation Variable.type: @units.qual.Dimensionless

method <init>(Ljava/util/List;Ljava/util/List;Ljava/util/Map;)V:
insert-annotation Method.parameter 0, Variable.type, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type, ParameterizedType.typeArgument 1: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type, ParameterizedType.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type, ParameterizedType.typeArgument 0: @units.qual.Dimensionless

package net.smert.jreactphysics3d.constraint:
class JointType:
field FIXEDJOINT:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field HINGEJOINT:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field SLIDERJOINT:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

field BALLSOCKETJOINT:
insert-annotation Variable.initializer, NewClass.identifier: @units.qual.Dimensionless

method <init>()V:

package net.smert.jreactphysics3d.engine:
class Profiler:@units.qual.Dimensionless
insert-annotation Class.initializer 0, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Class.initializer 0, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Class.initializer 0, Block.statement 3, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless

field rootNode:
insert-annotation Variable.type: @units.qual.Dimensionless

field frameCounter:
insert-annotation Variable.type: @units.qual.Dimensionless

field profilingStartTime:
insert-annotation Variable.type: @units.qual.Dimensionless

field currentNode:
insert-annotation Variable.type: @units.qual.Dimensionless

method GetElapsedTimeSinceStart()F:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless

method PrintRecursiveNodeReport(Lnet/smert/jreactphysics3d/engine/ProfileNodeIterator;II)V:
insert-annotation Method.body, Block.statement 15, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, Variable.initializer, ConditionalExpression.trueExpression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ForLoop.statement, Block.statement 3, Variable.initializer, ConditionalExpression.trueExpression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, Variable.initializer, ConditionalExpression.trueExpression, Binary.leftOperand, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 25, ForLoop.statement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 1, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ForLoop.statement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ForLoop.statement, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ForLoop.statement, Block.statement 3, Variable.initializer, ConditionalExpression.trueExpression, Binary.leftOperand, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, Variable.initializer, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ForLoop.statement, Block.statement 3, Variable.initializer, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ForLoop.statement, Block.statement 12, ExpressionStatement.expression, MethodInvocation.argument 0, Binary.rightOperand, TypeCast.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 13, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 14, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ForLoop.statement, Block.statement 4, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 15, ForLoop.statement, Block.statement 4, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 25, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 25, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 18, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 19, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 17, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless

method PrintReport(I)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless

method StartProfilingBlock(Ljava/lang/String;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method GetIterator()Lnet/smert/jreactphysics3d/engine/ProfileNodeIterator;:
insert-annotation Method.body, Block.statement 0, Return.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method Reset()V:
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand: @units.qual.Dimensionless

method <init>()V:

method getNumFrames()I:
insert-annotation Method.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.constraint:
class SliderJointInfo:
method <init>(Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 6, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ExpressionStatement.expression, Assignment.expression, Unary.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/constraint/JointType;)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;FF)V:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 7, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 8, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless

method <init>(Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/body/RigidBody;Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;FFFF)V:
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 3, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 6, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 7, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 4, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

package net.smert.jreactphysics3d.collision.narrowphase.GJK:
class Simplex:@units.qual.Dimensionless
field mSuppPointsA:
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.dimension 0: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 0: @units.qual.Dimensionless

field mBitsCurrentSimplex:
insert-annotation Variable.type: @units.qual.Dimensionless

field mDet:
insert-annotation Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 2: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.dimension 1: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.dimension 0: @units.qual.Dimensionless

field mPointsLengthSquare:
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.dimension 0: @units.qual.Dimensionless

field mLastFound:
insert-annotation Variable.type: @units.qual.Dimensionless

field mNormSquare:
insert-annotation Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.dimension 0: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 2: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.dimension 1: @units.qual.Dimensionless

field mDiffLength:
insert-annotation Variable.initializer, NewArray.dimension 1: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.dimension 0: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 2: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless

field mPoints:
insert-annotation Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.dimension 0: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 0: @units.qual.Dimensionless

field mLastFoundBit:
insert-annotation Variable.type: @units.qual.Dimensionless

field mSuppPointsB:
insert-annotation Variable.initializer, NewArray.type 0: @units.qual.Dimensionless
insert-annotation Variable.type: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.type 1: @units.qual.Dimensionless
insert-annotation Variable.initializer, NewArray.dimension 0: @units.qual.Dimensionless
insert-annotation Variable.type, ArrayType.type: @units.qual.Dimensionless

field mAllBits:
insert-annotation Variable.type: @units.qual.Dimensionless

field mMaxLengthSquare:
insert-annotation Variable.type: @units.qual.Dimensionless

method computeClosestPoint(Lnet/smert/jreactphysics3d/mathematics/Vector3;)Z:
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless

method addPoint(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Assert.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Assert.condition, Parenthesized.expression, Binary.leftOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, WhileLoop.statement, Block.statement 1, ExpressionStatement.expression, CompoundAssignment.expression: @units.qual.Dimensionless

method computeClosestPointsOfAandB(Lnet/smert/jreactphysics3d/mathematics/Vector3;Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.body, Block.statement 3, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.update 1, ExpressionStatement.expression, CompoundAssignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.initializer, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.initializer 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.initializer 1, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless

method isSubset(II)Z:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless

method getSimplex([Lnet/smert/jreactphysics3d/mathematics/Vector3;[Lnet/smert/jreactphysics3d/mathematics/Vector3;[Lnet/smert/jreactphysics3d/mathematics/Vector3;)I:
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.update 1, ExpressionStatement.expression, CompoundAssignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.initializer 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.initializer 1, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 2, Variable.type, ArrayType.type: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method <init>()V:
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.statement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ForLoop.statement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless

method isFull()Z:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless

method backupClosestPointInSimplex(Lnet/smert/jreactphysics3d/mathematics/Vector3;)V:
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.initializer 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 1, Variable.type: @units.qual.Dimensionless

method updateCache()V:
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 1, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.update 1, ExpressionStatement.expression, CompoundAssignment.expression: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 1, Variable.type: @units.qual.Dimensionless

method isEmpty()Z:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless

method isProperSubset(I)Z:
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.update 1, ExpressionStatement.expression, CompoundAssignment.expression: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 1, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 0, If.condition, Parenthesized.expression, Binary.rightOperand, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless

method isValidSubset(I)Z:
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 0, If.elseStatement, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 1, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 0, If.thenStatement, Block.statement 0, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.update 1, ExpressionStatement.expression, CompoundAssignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method isPointInSimplex(Lnet/smert/jreactphysics3d/mathematics/Vector3;)Z:
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 1, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.update 1, ExpressionStatement.expression, CompoundAssignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ForLoop.initializer 1, Variable.type: @units.qual.Dimensionless

method overlap(II)Z:
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Return.expression, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless

method computeDeterminants()V:
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.trueExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 3, ForLoop.initializer 2, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 8, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.variable, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 8, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.rightOperand, Binary.rightOperand, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.trueExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand, Binary.rightOperand, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, ForLoop.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.rightOperand, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 8, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.rightOperand, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.rightOperand, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 8, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand, Binary.rightOperand, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.trueExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.variable, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.rightOperand, Binary.rightOperand, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.trueExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 8, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand, Binary.rightOperand, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.rightOperand, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.rightOperand, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.rightOperand, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 8, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 3, ForLoop.initializer 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand, Binary.rightOperand, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.trueExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 8, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, ForLoop.initializer 1, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 8, ExpressionStatement.expression, Assignment.variable, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 8, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.rightOperand, Binary.rightOperand, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.trueExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand, Binary.rightOperand, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 3, ForLoop.update 1, ExpressionStatement.expression, CompoundAssignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 8, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.rightOperand, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.rightOperand, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 3, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 8, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.rightOperand, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 8, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 3, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand, Binary.rightOperand, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.trueExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, ExpressionStatement.expression, Assignment.variable, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.rightOperand, Binary.rightOperand, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 5, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.trueExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand, Binary.rightOperand, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, ForLoop.initializer 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.rightOperand, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.rightOperand, Binary.rightOperand, MethodInvocation.methodSelect, MemberSelect.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 3, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.trueExpression, Parenthesized.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 2, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.rightOperand, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.falseExpression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand, Binary.leftOperand, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 6, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 0, ForLoop.update 1, ExpressionStatement.expression, CompoundAssignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 8, ExpressionStatement.expression, Assignment.variable, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 4, ExpressionStatement.expression, Assignment.expression, Binary.leftOperand, Binary.leftOperand, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 7, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.leftOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 1, ExpressionStatement.expression, Assignment.expression, ConditionalExpression.falseExpression, Parenthesized.expression, ConditionalExpression.condition, Binary.rightOperand, ArrayAccess.expression, ArrayAccess.index: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, If.thenStatement, Block.statement 1, If.thenStatement, Block.statement 8, ExpressionStatement.expression, Assignment.expression, Binary.rightOperand, Binary.rightOperand, MethodInvocation.argument 0, ArrayAccess.index: @units.qual.Dimensionless

method isAffinelyDependent()Z:
insert-annotation Method.body, Block.statement 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.initializer 1, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.update 1, ExpressionStatement.expression, CompoundAssignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Return.expression, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.initializer 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, ForLoop.condition, Binary.rightOperand: @units.qual.Dimensionless

method getMaxLengthSquareOfAPoint()F:
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless

method computeClosestPointForSubset(I)Lnet/smert/jreactphysics3d/mathematics/Vector3;:
insert-annotation Method.body, Block.statement 0, ExpressionStatement.expression, Assignment.expression: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.statement, Block.statement 0, If.thenStatement, Block.statement 2, ExpressionStatement.expression, MethodInvocation.argument 0, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.initializer 0, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.type: @units.qual.Dimensionless
insert-annotation Method.parameter 0, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.initializer 1, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 4, Assert.condition, Parenthesized.expression, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Return.expression, MethodInvocation.methodSelect, MemberSelect.expression, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.parameter -1: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 2, Variable.initializer, NewClass.identifier: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.initializer 1, Variable.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.condition, Binary.rightOperand: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 1, Variable.initializer: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 5, Return.expression, MethodInvocation.argument 0, Binary.leftOperand: @units.qual.Dimensionless
insert-annotation Method.type: @units.qual.Dimensionless
insert-annotation Method.body, Block.statement 3, ForLoop.update 1, ExpressionStatement.expression, CompoundAssignment.expression: @units.qual.Dimensionless


